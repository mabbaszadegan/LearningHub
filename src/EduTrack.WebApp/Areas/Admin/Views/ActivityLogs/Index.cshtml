@model EduTrack.WebApp.Models.ActivityLogsViewModel
@{
    ViewData["Title"] = "لاگ فعالیت‌ها";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-0 text-gray-800">لاگ فعالیت‌ها</h1>
                    <p class="mb-0 text-muted">مشاهده و بررسی تمام فعالیت‌های سیستم</p>
                </div>
                <div>
                    <button type="button" class="btn btn-info" onclick="refreshLogs()">
                        <i class="fas fa-sync-alt"></i> بروزرسانی
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filter -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-body">
                    <form method="get" class="row">
                        <div class="col-md-3 mb-3">
                            <label for="search" class="form-label">جستجو</label>
                            <input type="text" class="form-control" id="search" name="search" 
                                   value="@Model.Search" placeholder="نام کاربر یا جزئیات">
                        </div>
                        <div class="col-md-2 mb-3">
                            <label for="action" class="form-label">نوع عملیات</label>
                            <select class="form-control" id="action" name="action">
                                <option value="">همه عملیات</option>
                                @foreach (var actionType in Model.AvailableActions)
                                {
                                    <option value="@actionType" selected="@(Model.Action == actionType)">@actionType</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-2 mb-3">
                            <label for="fromDate" class="form-label">از تاریخ</label>
                            <input type="date" class="form-control" id="fromDate" name="fromDate" 
                                   value="@(Model.FromDate?.ToString("yyyy-MM-dd"))">
                        </div>
                        <div class="col-md-2 mb-3">
                            <label for="toDate" class="form-label">تا تاریخ</label>
                            <input type="date" class="form-control" id="toDate" name="toDate" 
                                   value="@(Model.ToDate?.ToString("yyyy-MM-dd"))">
                        </div>
                        <div class="col-md-2 mb-3">
                            <label for="pageSize" class="form-label">تعداد در صفحه</label>
                            <select class="form-control" id="pageSize" name="pageSize">
                                <option value="25" selected="@(Model.PageSize == 25)">25</option>
                                <option value="50" selected="@(Model.PageSize == 50)">50</option>
                                <option value="100" selected="@(Model.PageSize == 100)">100</option>
                                <option value="200" selected="@(Model.PageSize == 200)">200</option>
                            </select>
                        </div>
                        <div class="col-md-1 mb-3">
                            <label class="form-label">&nbsp;</label>
                            <div>
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-search"></i>
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Activity Logs Table -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">
                        فعالیت‌های سیستم (@Model.TotalLogs مورد)
                    </h6>
                </div>
                <div class="card-body">
                    @if (Model.Logs.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-bordered table-hover" id="logsTable">
                                <thead>
                                    <tr>
                                        <th>کاربر</th>
                                        <th>عملیات</th>
                                        <th>جزئیات</th>
                                        <th>IP آدرس</th>
                                        <th>زمان</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var log in Model.Logs)
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="mr-3">
                                                        <div class="icon-circle bg-@(log.User.Role == UserRole.Admin ? "danger" : log.User.Role == UserRole.Teacher ? "warning" : "info")">
                                                            <i class="fas fa-@(log.User.Role == UserRole.Admin ? "user-shield" : log.User.Role == UserRole.Teacher ? "chalkboard-teacher" : "user-graduate") text-white"></i>
                                                        </div>
                                                    </div>
                                                    <div>
                                                        <div class="font-weight-bold">@log.User.FullName</div>
                                                        <div class="text-muted small">@log.User.Email</div>
                                                        <span class="badge badge-@(log.User.Role == UserRole.Admin ? "danger" : log.User.Role == UserRole.Teacher ? "warning" : "info") badge-sm">
                                                            @(log.User.Role == UserRole.Admin ? "مدیر" : log.User.Role == UserRole.Teacher ? "معلم" : "دانش‌آموز")
                                                        </span>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <span class="badge badge-@GetActionBadgeClass(log.Action)">@log.Action</span>
                                                @if (!string.IsNullOrEmpty(log.EntityType))
                                                {
                                                    <div class="text-muted small mt-1">@log.EntityType</div>
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(log.Details))
                                                {
                                                    <span class="text-muted">@log.Details</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(log.IpAddress))
                                                {
                                                    <code class="small">@log.IpAddress</code>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                <div>@log.Timestamp.ToString("yyyy/MM/dd")</div>
                                                <div class="text-muted small">@log.Timestamp.ToString("HH:mm:ss")</div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Pagination -->
                        @if (Model.TotalPages > 1)
                        {
                            <nav aria-label="Page navigation">
                                <ul class="pagination justify-content-center">
                                    @if (Model.CurrentPage > 1)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("ActivityLogs", "Admin", new { search = Model.Search, action = Model.Action, fromDate = Model.FromDate, toDate = Model.ToDate, page = Model.CurrentPage - 1, pageSize = Model.PageSize })">قبلی</a>
                                        </li>
                                    }

                                    @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                                    {
                                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                            <a class="page-link" href="@Url.Action("ActivityLogs", "Admin", new { search = Model.Search, action = Model.Action, fromDate = Model.FromDate, toDate = Model.ToDate, page = i, pageSize = Model.PageSize })">@i</a>
                                        </li>
                                    }

                                    @if (Model.CurrentPage < Model.TotalPages)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("ActivityLogs", "Admin", new { search = Model.Search, action = Model.Action, fromDate = Model.FromDate, toDate = Model.ToDate, page = Model.CurrentPage + 1, pageSize = Model.PageSize })">بعدی</a>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        }
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-history fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">فعالیتی یافت نشد</h5>
                            <p class="text-muted">با فیلترهای مختلف جستجو کنید.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Stats -->
    @if (Model.Logs.Any())
    {
        <div class="row mt-4">
            <div class="col-12">
                <div class="card shadow">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">آمار سریع</h6>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-3">
                                <div class="text-center">
                                    <div class="h4 mb-0 font-weight-bold text-primary">@Model.Logs.Select(l => l.UserId).Distinct().Count()</div>
                                    <div class="text-xs font-weight-bold text-uppercase text-muted">کاربران فعال</div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="text-center">
                                    <div class="h4 mb-0 font-weight-bold text-success">@Model.Logs.Select(l => l.Action).Distinct().Count()</div>
                                    <div class="text-xs font-weight-bold text-uppercase text-muted">انواع عملیات</div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="text-center">
                                    <div class="h4 mb-0 font-weight-bold text-info">@Model.Logs.Count(l => l.Timestamp >= DateTimeOffset.UtcNow.AddHours(-24))</div>
                                    <div class="text-xs font-weight-bold text-uppercase text-muted">۲۴ ساعت گذشته</div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="text-center">
                                    <div class="h4 mb-0 font-weight-bold text-warning">@Model.Logs.Select(l => l.IpAddress).Where(ip => !string.IsNullOrEmpty(ip)).Distinct().Count()</div>
                                    <div class="text-xs font-weight-bold text-uppercase text-muted">IP آدرس‌های منحصر</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        function refreshLogs() {
            location.reload();
        }

        // Auto refresh every 30 seconds
        setInterval(function() {
            refreshLogs();
        }, 30000);

        // Set default date range to last 7 days if not set
        $(document).ready(function() {
            if (!$('#fromDate').val() && !$('#toDate').val()) {
                var today = new Date();
                var lastWeek = new Date();
                lastWeek.setDate(today.getDate() - 7);
                
                $('#fromDate').val(lastWeek.toISOString().split('T')[0]);
                $('#toDate').val(today.toISOString().split('T')[0]);
            }
        });

        // Export functionality
        function exportLogs() {
            var params = new URLSearchParams(window.location.search);
            params.set('export', 'true');
            window.open(window.location.pathname + '?' + params.toString());
        }
    </script>
}

<style>
    .icon-circle {
        height: 2.5rem;
        width: 2.5rem;
        border-radius: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .badge-sm {
        font-size: 0.65em;
    }
    
    .text-gray-800 {
        color: #5a5c69 !important;
    }
    
    .table-hover tbody tr:hover {
        background-color: rgba(0,0,0,.075);
    }
    
    code {
        color: #e83e8c;
        background-color: #f8f9fa;
        padding: 0.2rem 0.4rem;
        border-radius: 0.25rem;
    }
</style>

@functions {
    private string GetActionBadgeClass(string action)
    {
        return action.ToLower() switch
        {
            "login" or "logout" => "secondary",
            "create" or "createuser" or "createcourse" => "success",
            "update" or "updateuser" or "edit" => "primary",
            "delete" or "remove" => "danger",
            "resetpassword" or "forcelogout" => "warning",
            "view" or "access" => "info",
            _ => "dark"
        };
    }
}
