@model EduTrack.Application.Common.Models.ScheduleItems.CreateScheduleItemRequest
@{
    ViewData["Title"] = "ایجاد آیتم آموزشی جدید";
    var teachingPlanId = ViewBag.TeachingPlanId as int? ?? 0;
    var teachingPlanTitle = ViewBag.TeachingPlanTitle as string ?? "برنامه آموزشی";
    var courseTitle = ViewBag.CourseTitle as string ?? "دوره";
    var courseId = ViewBag.CourseId as int? ?? 0;
}

<!-- Modern Page Header -->
<div class="modern-page-header">
    <div class="container-fluid">
        <div class="row align-items-center">
            <div class="col-md-8">
                <div class="page-title-section">
                    <div class="breadcrumb-modern">
                        <a asp-controller="TeachingPlan" asp-action="Index" class="breadcrumb-link">
                            <i class="fas fa-home"></i>
                            <span>خانه</span>
                        </a>
                        <span class="breadcrumb-separator">/</span>
                        <a asp-controller="TeachingPlan" asp-action="Details" asp-route-id="@teachingPlanId" class="breadcrumb-link">
                            <span>@teachingPlanTitle</span>
                        </a>
                        <span class="breadcrumb-separator">/</span>
                        <span class="breadcrumb-current">ایجاد آیتم آموزشی</span>
                    </div>
                    <h1 class="page-title-modern">
                        <i class="fas fa-plus-circle"></i>
                        <span>ایجاد آیتم آموزشی جدید</span>
                    </h1>
                    <p class="page-subtitle-modern">برای دوره "@courseTitle"</p>
                </div>
            </div>
            <div class="col-md-4">
                <div class="page-actions-modern">
                    <button type="button" class="btn-preview-modern" id="previewBtn">
                        <i class="fas fa-eye"></i>
                        <span>پیش‌نمایش</span>
                    </button>
                    <a asp-action="Index" asp-route-teachingPlanId="@teachingPlanId" class="btn-back-modern">
                        <i class="fas fa-arrow-right"></i>
                        <span>بازگشت</span>
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Step Progress Indicator -->
<div class="step-progress-container">
    <div class="step-progress">
        <div class="step-progress-bar">
            <div class="step-progress-fill" id="stepProgressFill"></div>
        </div>
        <div class="step-indicators" id="stepIndicators">
            <div class="step-indicator current" data-step="1">
                <div class="step-indicator-icon">
                    <i class="fas fa-info-circle"></i>
                </div>
                <div class="step-indicator-text">
                    <div class="step-indicator-title">اطلاعات کلی</div>
                    <div class="step-indicator-desc">عنوان و نوع آیتم</div>
                </div>
            </div>
            <div class="step-indicator" data-step="2">
                <div class="step-indicator-icon">
                    <i class="fas fa-calendar-alt"></i>
                </div>
                <div class="step-indicator-text">
                    <div class="step-indicator-title">زمان‌بندی</div>
                    <div class="step-indicator-desc">تاریخ و امتیاز</div>
                </div>
            </div>
            <div class="step-indicator" data-step="3">
                <div class="step-indicator-icon">
                    <i class="fas fa-users"></i>
                </div>
                <div class="step-indicator-text">
                    <div class="step-indicator-title">تخصیص</div>
                    <div class="step-indicator-desc">گروه و زیرمبحث</div>
                </div>
            </div>
            <div class="step-indicator" data-step="4">
                <div class="step-indicator-icon">
                    <i class="fas fa-book"></i>
                </div>
                <div class="step-indicator-text">
                    <div class="step-indicator-title">محتوای آموزشی</div>
                    <div class="step-indicator-desc">طراحی و تولید</div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Main Content -->
<div class="modern-content-container">
    <div class="container-fluid">
        <div class="row">
            <!-- Main Form -->
            <div class="col-12">
                <div class="modern-form-container">
                    <form asp-action="Create" method="post" id="createItemForm" class="modern-form">
                        @Html.AntiForgeryToken()
                        <input asp-for="TeachingPlanId" type="hidden" />
                        <input name="id" value="0" type="hidden" />
                        <!-- Hidden fields for multi-select values -->
                        <input type="hidden" id="selectedGroupIds" name="GroupIds" />
                        <input type="hidden" id="selectedSubChapterIds" name="SubChapterIds" />
                        <input type="hidden" id="selectedStudentIds" name="StudentIds" />
                        <!-- Hidden field for content JSON -->
                        <input type="hidden" id="contentJson" name="ContentJson" value="@Model.ContentJson" />
                        
                        <!-- Step 1: Basic Information -->
                        @await Html.PartialAsync("_Step1BasicInfo", Model)

                        <!-- Step 2: Schedule Information -->
                        @await Html.PartialAsync("_Step2Scheduling", Model)

                        <!-- Step 3: Assignment Information -->
                        @await Html.PartialAsync("_Step3Assignment", Model)

                        <!-- Step 4: Content Design Section -->
                        @await Html.PartialAsync("_Step4Content", Model)

                        <!-- Form Navigation -->
                        <div class="form-navigation">
                            <div class="nav-buttons">
                                <button type="button" class="nav-btn nav-prev" id="prevStepBtn" disabled>
                                    <i class="fas fa-arrow-right"></i>
                                    <span>قبلی</span>
                                </button>
                                <button type="button" class="nav-btn nav-next" id="nextStepBtn">
                                    <span>بعدی</span>
                                    <i class="fas fa-arrow-left"></i>
                                </button>
                                <button type="submit" class="nav-btn nav-submit" id="submitBtn" style="display: none;">
                                    <i class="fas fa-check"></i>
                                    <span>ایجاد آیتم</span>
                                </button>
                            </div>
                            <div class="nav-progress">
                                <div class="progress-bar">
                                    <div class="progress-fill" id="progressFill"></div>
                                </div>
                                <span class="progress-text" id="progressText">مرحله 1 از 4</span>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Preview Modal -->
<div class="modal fade" id="previewModal" tabindex="-1" aria-labelledby="previewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="previewModalLabel">
                    <i class="fas fa-eye"></i>
                    پیش‌نمایش آیتم آموزشی
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="previewContent">
                    <!-- Preview content will be loaded here -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">بستن</button>
                <button type="button" class="btn btn-primary" id="editFromPreview">ویرایش</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/css/areas/teacher/schedule-items/schedule-item-form.css" />
    <link rel="stylesheet" href="~/css/areas/teacher/schedule-items/content-builder.css" />
}

@section Scripts {
    <script src="~/js/areas/teacher/schedule-items/step1-basics.js"></script>
    <script src="~/js/areas/teacher/schedule-items/step2-timing.js"></script>
    <script src="~/js/areas/teacher/schedule-items/step3-assignment.js"></script>
    <script src="~/js/areas/teacher/schedule-items/step4-content.js"></script>
    <script src="~/js/areas/teacher/schedule-items/schedule-item-form.js"></script>
    <script>
        // Global test function
        function testSaveStep3() {
            if (window.formManager) {
                window.formManager.testSaveStep3();
            } else {
                console.error('FormManager not available');
            }
        }
    </script>
    <script src="~/js/areas/teacher/schedule-items/content-builder.js"></script>
    <script>
        $(document).ready(function() {
            // Initialize the form manager
            window.scheduleItemForm = new ModernScheduleItemFormManager();
            window.formManager = window.scheduleItemForm; // For global access
            // Initialize step managers
            window.step1Manager = new Step1BasicsManager(window.scheduleItemForm);
            window.step2Manager = new Step2TimingManager(window.scheduleItemForm);
            // Step3Manager is initialized by the main form, but we need to wait for it
            setTimeout(() => {
                window.step3Manager = window.scheduleItemForm.step3Manager;
                console.log('Step3Manager assigned:', !!window.step3Manager);
                console.log('All step managers status:', {
                    step1: !!window.step1Manager,
                    step2: !!window.step2Manager,
                    step3: !!window.step3Manager,
                    step4: !!window.step4Manager
                });
            }, 300);
            window.step4Manager = new Step4ContentManager(window.scheduleItemForm);
            
            // Global debug functions
            window.resetSavingFlag = function() {
                if (window.scheduleItemForm && typeof window.scheduleItemForm.resetSavingFlag === 'function') {
                    window.scheduleItemForm.resetSavingFlag();
                } else {
                    console.error('resetSavingFlag function not available');
                }
            };
            
            window.checkSavingFlag = function() {
                if (window.scheduleItemForm) {
                    console.log('isSaving flag:', window.scheduleItemForm.isSaving);
                } else {
                    console.error('scheduleItemForm not available');
                }
            };
            
            window.checkExistingData = function() {
                if (window.scheduleItemForm && typeof window.scheduleItemForm.getExistingItemData === 'function') {
                    const data = window.scheduleItemForm.getExistingItemData();
                    console.log('Existing item data:', data);
                    return data;
                } else {
                    console.error('getExistingItemData not available');
                    return null;
                }
            };
            
            window.testStepDataLoading = function(stepNumber) {
                console.log(`Testing step ${stepNumber} data loading...`);
                console.log('Existing data:', window.scheduleItemForm ? window.scheduleItemForm.getExistingItemData() : 'No form manager');
                
                switch(stepNumber) {
                    case 1:
                        if (window.step1Manager && typeof window.step1Manager.loadStepData === 'function') {
                            window.step1Manager.loadStepData();
                        } else {
                            console.error('Step1Manager not available or loadStepData method missing');
                        }
                        break;
                    case 2:
                        if (window.step2Manager && typeof window.step2Manager.loadStepData === 'function') {
                            window.step2Manager.loadStepData();
                        } else {
                            console.error('Step2Manager not available or loadStepData method missing');
                        }
                        break;
                    case 3:
                        if (window.step3Manager && typeof window.step3Manager.loadStepData === 'function') {
                            window.step3Manager.loadStepData();
                        } else {
                            console.error('Step3Manager not available or loadStepData method missing');
                        }
                        break;
                    case 4:
                        if (window.step4Manager && typeof window.step4Manager.loadStepData === 'function') {
                            window.step4Manager.loadStepData();
                        } else {
                            console.error('Step4Manager not available or loadStepData method missing');
                        }
                        break;
                }
            };
            
            window.testAllStepDataLoading = function() {
                console.log('Testing all step data loading...');
                for (let i = 1; i <= 4; i++) {
                    setTimeout(() => {
                        console.log(`Testing step ${i}...`);
                        window.testStepDataLoading(i);
                    }, i * 500);
                }
            };
            
            window.debugCurrentStep = function() {
                if (window.scheduleItemForm) {
                    console.log('Current step:', window.scheduleItemForm.currentStep);
                    console.log('Existing data:', window.scheduleItemForm.getExistingItemData());
                    console.log('Step visibility:', {
                        step1: document.querySelector('.form-step[data-step="1"]')?.classList.contains('active'),
                        step2: document.querySelector('.form-step[data-step="2"]')?.classList.contains('active'),
                        step3: document.querySelector('.form-step[data-step="3"]')?.classList.contains('active'),
                        step4: document.querySelector('.form-step[data-step="4"]')?.classList.contains('active')
                    });
                }
            };
            
            window.forceLoadCurrentStepData = function() {
                if (window.scheduleItemForm && window.scheduleItemForm.currentStep) {
                    console.log('Forcing load of current step data for step:', window.scheduleItemForm.currentStep);
                    window.scheduleItemForm.initializeStepContent(window.scheduleItemForm.currentStep);
                }
            };
        });
    </script>
}