@using EduTrack.Application.Common.Models.Courses
@model List<SubChapterDto>
@{
    ViewData["Title"] = "مدیریت زیرمباحث";
}

<!-- Filter/Sort Info Bar -->
@if (Model.Any())
{
    <div class="filter-bar-minimal mb-3">
        <div class="filter-group">
            <button class="filter-btn-minimal active" data-filter="all">
                <i class="fas fa-layer-group"></i>
                <span>همه (@Model.Count)</span>
            </button>
            <button class="filter-btn-minimal" data-filter="active">
                <i class="fas fa-check-circle"></i>
                <span>فعال (@Model.Count(c => c.IsActive))</span>
            </button>
            <button class="filter-btn-minimal" data-filter="inactive">
                <i class="fas fa-times-circle"></i>
                <span>غیرفعال (@Model.Count(c => !c.IsActive))</span>
            </button>
        </div>
        <div class="drag-info">
            <i class="fas fa-grip-lines"></i>
            <span>برای تغییر ترتیب، زیرمباحث را بکشید و رها کنید</span>
        </div>
    </div>
}

@if (Model.Any())
{
    <!-- SubChapters List with Enhanced Drag & Drop -->
    <div class="chapters-sortable-list" id="subchaptersContainer">
        @foreach (var subChapter in Model.OrderBy(c => c.Order))
        {
            <div class="chapter-card-draggable" data-subchapter-id="@subChapter.Id" data-status="@(subChapter.IsActive ? "active" : "inactive")" data-is-active="@(subChapter.IsActive ? "true" : "false")">
                <!-- Enhanced Drag Handle with Up/Down -->
                <div class="drag-handle-enhanced">
                    <button class="move-btn-chapter move-up" data-subchapter-id="@subChapter.Id" data-direction="up" title="انتقال به بالا">
                        <i class="fas fa-chevron-up"></i>
                    </button>
                    <div class="drag-lines">
                        <i class="fas fa-grip-lines"></i>
                    </div>
                    <span class="drag-hint">کشیدن</span>
                    <button class="move-btn-chapter move-down" data-subchapter-id="@subChapter.Id" data-direction="down" title="انتقال به پایین">
                        <i class="fas fa-chevron-down"></i>
                    </button>
                </div>
                
                <!-- Card Content -->
                <div class="chapter-card-content">
                    <!-- Header Section -->
                    <div class="chapter-header-section">
                        <div class="chapter-info">
                            <h3 class="chapter-title-main">@subChapter.Title</h3>
                            @if (!string.IsNullOrEmpty(subChapter.Description))
                            {
                                <p class="chapter-description">@subChapter.Description</p>
                            }
                        </div>
                        <div class="chapter-actions-top">
                            <label class="toggle-switch-minimal" title="فعال/غیرفعال">
                                <input type="checkbox" 
                                       class="toggle-subchapter-active" 
                                       data-subchapter-id="@subChapter.Id" 
                                       @(subChapter.IsActive ? "checked" : "") />
                                <span class="toggle-slider-minimal"></span>
                            </label>
                            <div class="dropdown">
                                <button class="btn-icon-minimal" data-bs-toggle="dropdown">
                                    <i class="fas fa-ellipsis-v"></i>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li>
                                        <a class="dropdown-item" asp-action="Edit" asp-route-id="@subChapter.Id">
                                            <i class="fas fa-edit"></i>ویرایش زیرمبحث
                                        </a>
                                    </li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <a class="dropdown-item" asp-controller="EducationalContent" asp-action="Index" asp-route-subChapterId="@subChapter.Id">
                                            <i class="fas fa-folder-open"></i>مدیریت محتوا
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Objective Section -->
                    @if (!string.IsNullOrEmpty(subChapter.Objective))
                    {
                        <div class="objective-box-minimal">
                            <i class="fas fa-bullseye"></i>
                            <span>@subChapter.Objective</span>
                        </div>
                    }
                    
                    <!-- Action Buttons -->
                    <div class="chapter-actions-footer">
                        <a asp-controller="EducationalContent" asp-action="Index" asp-route-subChapterId="@subChapter.Id" class="action-btn-footer primary">
                            <i class="fas fa-folder-open"></i>
                            <span>مدیریت محتوا</span>
                        </a>
                        <a asp-controller="EducationalContent" asp-action="Create" asp-route-subChapterId="@subChapter.Id" class="action-btn-footer success">
                            <i class="fas fa-plus"></i>
                            <span>افزودن محتوا</span>
                        </a>
                        <a asp-action="Edit" asp-route-id="@subChapter.Id" class="action-btn-footer info">
                            <i class="fas fa-edit"></i>
                            <span>ویرایش</span>
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <!-- Empty State -->
    <div class="empty-state-minimal">
        <div class="empty-icon">
            <i class="fas fa-layer-group"></i>
        </div>
        <h3>هنوز زیرمبحثی ایجاد نشده</h3>
        <p>اولین زیرمبحث خود را ایجاد کنید</p>
        <a asp-action="Create" asp-route-chapterId="@ViewBag.ChapterId" class="btn-action-primary">
            <i class="fas fa-plus"></i>
            <span>ایجاد زیرمبحث جدید</span>
        </a>
    </div>
}

@section Styles {
    <style>
        /* Use same styles as Chapters/Index but adapted for SubChapters */

        .page-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: #2d3748;
            margin: 0;
        }

        .page-subtitle {
            font-size: 0.875rem;
            color: #718096;
            margin: 0.25rem 0 0 0;
        }

        .breadcrumb-link {
            color: #667eea;
            text-decoration: none;
            font-size: 0.875rem;
        }

        .breadcrumb-link:hover {
            color: #5a6fd8;
            text-decoration: underline;
        }

        .btn-action-primary {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.625rem 1.125rem;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 8px;
            text-decoration: none;
            font-size: 0.813rem;
            font-weight: 500;
            transition: all 0.2s;
            border: none;
        }

        .btn-action-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
            color: white;
        }

        /* Filter Bar */
        .filter-bar-minimal {
            background: white;
            border-radius: 8px;
            padding: 0.875rem 1rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border: 1px solid #e9ecef;
        }

        .filter-group {
            display: flex;
            gap: 0.5rem;
            flex-wrap: wrap;
        }

        .filter-btn-minimal {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            background: white;
            border: 1px solid #e2e8f0;
            border-radius: 6px;
            font-size: 0.813rem;
            font-weight: 500;
            color: #4a5568;
            cursor: pointer;
            transition: all 0.2s;
        }

        .filter-btn-minimal:hover {
            background: #f7fafc;
            border-color: #cbd5e0;
        }

        .filter-btn-minimal.active {
            background: #667eea;
            border-color: #667eea;
            color: white;
        }

        .drag-info {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.75rem;
            color: #6c757d;
        }

        .drag-info i {
            color: #adb5bd;
        }

        /* Chapters List */
        .chapters-sortable-list {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .chapter-card-draggable {
            background: white;
            border-radius: 8px;
            border: 2px solid #e9ecef;
            overflow: hidden;
            transition: all 0.2s;
            cursor: move;
            position: relative;
            display: flex;
        }

        .chapter-card-draggable:hover {
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            border-color: #667eea;
        }

        .chapter-card-draggable.dragging {
            opacity: 0.5;
            transform: rotate(2deg);
        }

        .chapter-card-draggable.drag-over {
            border-color: #667eea;
            background: rgba(102, 126, 234, 0.05);
        }

        /* Drag Handle */
        .drag-handle-enhanced {
            width: 60px;
            background: #f8f9fa;
            border-left: 2px solid #e9ecef;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            gap: 0.375rem;
            padding: 0.75rem 0;
            transition: all 0.2s;
            flex-shrink: 0;
        }

        .move-btn-chapter {
            width: 28px;
            height: 28px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: white;
            border: 1px solid #e9ecef;
            border-radius: 4px;
            color: #6c757d;
            cursor: pointer;
            transition: all 0.2s;
            font-size: 0.75rem;
        }

        .move-btn-chapter:hover {
            background: #667eea;
            border-color: #667eea;
            color: white;
            transform: scale(1.05);
        }

        .move-btn-chapter:active {
            transform: scale(0.95);
        }

        .drag-lines {
            font-size: 1.25rem;
            color: #adb5bd;
            transition: all 0.2s;
            cursor: move;
            padding: 0.5rem 0;
        }

        .drag-handle-enhanced:hover .drag-lines {
            color: #667eea;
            transform: scale(1.1);
        }

        .drag-hint {
            font-size: 0.625rem;
            color: #adb5bd;
            writing-mode: vertical-rl;
            text-orientation: mixed;
            font-weight: 600;
            letter-spacing: 1px;
        }

        /* Card Content */
        .chapter-card-content {
            flex: 1;
            padding: 1rem;
        }

        .chapter-header-section {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 0.75rem;
        }

        .chapter-info {
            flex: 1;
        }

        .chapter-title-main {
            font-size: 1rem;
            font-weight: 600;
            color: #2d3748;
            margin: 0;
            line-height: 1.4;
        }

        .chapter-description {
            font-size: 0.813rem;
            color: #718096;
            margin: 0.25rem 0 0 0;
            line-height: 1.4;
        }

        .chapter-actions-top {
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .toggle-switch-minimal {
            position: relative;
            width: 44px;
            height: 24px;
            cursor: pointer;
        }

        .toggle-switch-minimal input {
            display: none;
        }

        .toggle-slider-minimal {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: #cbd5e0;
            border-radius: 12px;
            transition: 0.3s;
        }

        .toggle-slider-minimal:before {
            content: '';
            position: absolute;
            width: 20px;
            height: 20px;
            left: 2px;
            bottom: 2px;
            background: white;
            border-radius: 50%;
            transition: 0.3s;
        }

        .toggle-switch-minimal input:checked + .toggle-slider-minimal {
            background: #48bb78;
        }

        .toggle-switch-minimal input:checked + .toggle-slider-minimal:before {
            transform: translateX(20px);
        }

        .btn-icon-minimal {
            width: 32px;
            height: 32px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: white;
            border: 1px solid #e2e8f0;
            border-radius: 6px;
            color: #4a5568;
            cursor: pointer;
            transition: all 0.2s;
        }

        .btn-icon-minimal:hover {
            background: #f7fafc;
            border-color: #cbd5e0;
        }

        /* Objective Box */
        .objective-box-minimal {
            display: flex;
            align-items: center;
            gap: 0.625rem;
            padding: 0.75rem;
            background: rgba(102, 126, 234, 0.05);
            border: 1px solid rgba(102, 126, 234, 0.2);
            border-radius: 8px;
            font-size: 0.813rem;
            color: #495057;
            margin-bottom: 0.75rem;
        }

        .objective-box-minimal i {
            color: #667eea;
            font-size: 0.875rem;
        }

        /* Action Buttons */
        .chapter-actions-footer {
            display: flex;
            gap: 0.75rem;
            flex-wrap: wrap;
        }

        .action-btn-footer {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            font-size: 0.75rem;
            font-weight: 500;
            text-decoration: none;
            transition: all 0.2s;
            border: 1px solid transparent;
        }

        .action-btn-footer.primary {
            background: #667eea;
            color: white;
        }

        .action-btn-footer.primary:hover {
            background: #5568d3;
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3);
        }

        .action-btn-footer.success {
            background: #48bb78;
            color: white;
        }

        .action-btn-footer.success:hover {
            background: #38a169;
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(72, 187, 120, 0.3);
        }

        .action-btn-footer.info {
            background: #4299e1;
            color: white;
        }

        .action-btn-footer.info:hover {
            background: #3182ce;
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(66, 153, 225, 0.3);
        }

        /* Empty State */
        .empty-state-minimal {
            text-align: center;
            padding: 3rem 2rem;
            background: white;
            border-radius: 8px;
            border: 1px solid #e9ecef;
        }

        .empty-icon {
            width: 64px;
            height: 64px;
            margin: 0 auto 1rem;
            display: flex;
            align-items: center;
            justify-content: center;
            background: rgba(102, 126, 234, 0.1);
            border-radius: 50%;
            color: #667eea;
            font-size: 1.5rem;
        }

        .empty-state-minimal h3 {
            font-size: 1.25rem;
            font-weight: 600;
            color: #2d3748;
            margin-bottom: 0.5rem;
        }

        .empty-state-minimal p {
            color: #718096;
            margin-bottom: 1.5rem;
        }
    </style>
}

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.15.0/Sortable.min.js"></script>
    <script>
        $(document).ready(function() {
            // Enhanced Sortable with better visual feedback
            const subchaptersContainer = document.getElementById('subchaptersContainer');
            if (subchaptersContainer) {
                new Sortable(subchaptersContainer, {
                    animation: 200,
                    handle: '.drag-lines',
                    ghostClass: 'sortable-ghost',
                    chosenClass: 'sortable-chosen',
                    dragClass: 'sortable-drag',
                    forceFallback: true,
                    fallbackClass: 'sortable-fallback',
                    fallbackOnBody: true,
                    swapThreshold: 0.65,
                    onEnd: function(evt) {
                        updateSubChaptersOrder();
                    }
                });
            }

            // Move up/down buttons for subchapters
            $('.move-btn-chapter').on('click', function(e) {
                e.stopPropagation();
                const subChapterId = $(this).data('subchapter-id');
                const direction = $(this).data('direction');

                $.ajax({
                    url: '@Url.Action("MoveSubChapter", "SubChapters")',
                    type: 'POST',
                    data: { id: subChapterId, direction: direction },
                    success: function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            showToast('error', response.error || 'خطا در جابجایی');
                        }
                    },
                    error: function() {
                        showToast('error', 'خطا در ارتباط با سرور');
                    }
                });
            });

            // Filter functionality
            $('.filter-btn-minimal').on('click', function() {
                const filter = $(this).data('filter');
                
                // Update active button
                $('.filter-btn-minimal').removeClass('active');
                $(this).addClass('active');
                
                // Filter subchapters
                $('.chapter-card-draggable').each(function() {
                    const isActive = $(this).data('is-active') === 'true';
                    
                    if (filter === 'all') {
                        $(this).show();
                    } else if (filter === 'active' && isActive) {
                        $(this).show();
                    } else if (filter === 'inactive' && !isActive) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            });

            // Toggle subchapter active status
            $('.toggle-subchapter-active').on('change', function() {
                const subChapterId = $(this).data('subchapter-id');
                const isChecked = $(this).prop('checked');
                const $toggle = $(this);

                $.ajax({
                    url: '@Url.Action("ToggleActive", "SubChapters")',
                    type: 'POST',
                    data: { id: subChapterId },
                    success: function(response) {
                        if (response.success) {
                            const $card = $toggle.closest('.chapter-card-draggable');
                            $card.attr('data-status', response.isActive ? 'active' : 'inactive');
                            $card.attr('data-is-active', response.isActive ? 'true' : 'false');
                            showToast('success', response.isActive ? 'زیرمبحث فعال شد' : 'زیرمبحث غیرفعال شد');
                        } else {
                            $toggle.prop('checked', !isChecked);
                            showToast('error', response.error || 'خطا در تغییر وضعیت');
                        }
                    },
                    error: function() {
                        $toggle.prop('checked', !isChecked);
                        showToast('error', 'خطا در ارتباط با سرور');
                    }
                });
            });

            // Update subchapters order
            function updateSubChaptersOrder() {
                const subChapterIds = [];
                $('.chapter-card-draggable').each(function() {
                    subChapterIds.push($(this).data('subchapter-id'));
                });

                $.ajax({
                    url: '@Url.Action("ReorderSubChapters", "SubChapters")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(subChapterIds),
                    success: function(response) {
                        if (response.success) {
                            showToast('success', 'ترتیب زیرمباحث به‌روز شد');
                        } else {
                            showToast('error', response.error || 'خطا در به‌روزرسانی ترتیب');
                        }
                    },
                    error: function() {
                        showToast('error', 'خطا در ارتباط با سرور');
                    }
                });
            }

            // Toast notification function
            function showToast(type, message) {
                // Simple toast implementation
                const toast = $(`
                    <div class="toast-notification ${type}">
                        <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'}"></i>
                        <span>${message}</span>
                    </div>
                `);
                
                $('body').append(toast);
                
                setTimeout(() => {
                    toast.fadeOut(() => toast.remove());
                }, 3000);
            }
        });
    </script>
}
