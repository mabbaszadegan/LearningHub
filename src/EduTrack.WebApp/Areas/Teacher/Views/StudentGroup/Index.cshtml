@using EduTrack.Application.Common.Models.TeachingPlans
@model List<StudentGroupDto>
@{
    ViewData["Title"] = "مدیریت گروه‌های دانش‌آموزی";
    var teachingPlanId = ViewBag.TeachingPlanId as int?;
    var teachingPlanTitle = ViewBag.TeachingPlanTitle as string;
    var courseTitle = ViewBag.CourseTitle as string;
}

@Html.AntiForgeryToken()

<!-- Page Header -->
<div class="page-header-minimal mb-3">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1 class="page-title">گروه‌های دانش‌آموزی</h1>
            <p class="page-subtitle mb-0">
                <a asp-controller="Courses" asp-action="Index" class="breadcrumb-link">
                    <i class="fas fa-chevron-right"></i> دوره‌ها
                </a>
                <span class="mx-2">/</span>
                <a asp-controller="TeachingPlan" asp-action="Index" asp-route-courseId="@ViewBag.CourseId" class="breadcrumb-link">
                    @courseTitle
                </a>
                <span class="mx-2">/</span>
                <span>@teachingPlanTitle</span>
            </p>
        </div>
        <a asp-action="Create" asp-route-planId="@teachingPlanId" class="btn-action-primary">
            <i class="fas fa-plus"></i>
            <span>گروه جدید</span>
        </a>
    </div>
</div>

<!-- Filter/Sort Info Bar -->
@if (Model.Any())
{
    <div class="filter-bar-minimal mb-3">
        <div class="filter-group">
            <button class="filter-btn-minimal active" data-filter="all">
                <i class="fas fa-users"></i>
                <span>همه (@Model.Count)</span>
            </button>
            <button class="filter-btn-minimal" data-filter="with-members">
                <i class="fas fa-user-check"></i>
                <span>با عضو (@Model.Count(g => g.MemberCount > 0))</span>
            </button>
            <button class="filter-btn-minimal" data-filter="empty">
                <i class="fas fa-user-plus"></i>
                <span>بدون عضو (@Model.Count(g => g.MemberCount == 0))</span>
            </button>
        </div>
        <div class="drag-info">
            <i class="fas fa-info-circle"></i>
            <span>گروه‌های دانش‌آموزی برای سازماندهی فعالیت‌های گروهی</span>
        </div>
    </div>
}

@if (Model.Any())
{
    <!-- Groups List with Enhanced Style -->
    <div class="groups-sortable-list" id="groupsContainer">
        @foreach (var group in Model.OrderBy(g => g.Name))
        {
            <div class="group-card-draggable" data-group-id="@group.Id" data-member-count="@group.MemberCount">
                <!-- Group Info Section -->
                <div class="group-card-content">
                    <!-- Header Section -->
                    <div class="group-header-section">
                        <div class="group-info">
                            <h3 class="group-title-main">@group.Name</h3>
                            <div class="group-meta-info">
                                <span class="member-count-badge">
                                    <i class="fas fa-users"></i>
                                    @group.MemberCount عضو
                                </span>
                            </div>
                        </div>
                        <div class="group-actions-top">
                            <div class="dropdown">
                                <button class="btn-icon-minimal" data-bs-toggle="dropdown">
                                    <i class="fas fa-ellipsis-v"></i>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li>
                                        <a class="dropdown-item" href="#" onclick="editGroup(@group.Id, '@group.Name')">
                                            <i class="fas fa-edit"></i>ویرایش گروه
                                        </a>
                                    </li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <form asp-action="Delete" asp-route-id="@group.Id" method="post" 
                                              onsubmit="return confirm('آیا از حذف این گروه اطمینان دارید؟')">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="dropdown-item text-danger">
                                                <i class="fas fa-trash"></i>حذف گروه
                                            </button>
                                        </form>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Members Preview Section -->
                    @if (group.Members.Any())
                    {
                        <div class="members-preview-section">
                            <div class="members-header">
                                <span class="members-title">
                                    <i class="fas fa-user-friends"></i>
                                    اعضای گروه
                                </span>
                            </div>
                            <div class="members-list-preview" data-group-id="@group.Id">
                                @foreach (var member in group.Members.Take(4))
                                {
                                    <div class="member-item-preview draggable-student" 
                                         data-student-id="@member.StudentId" 
                                         data-student-name="@member.StudentName"
                                         data-group-id="@group.Id"
                                         draggable="true">
                                        <div class="member-avatar-small">
                                            <i class="fas fa-user"></i>
                                        </div>
                                        <div class="member-details">
                                            <span class="member-name-small">@member.StudentName</span>
                                        </div>
                                        <div class="member-actions-preview">
                                            <button class="btn-remove-member-preview" 
                                                    onclick="removeMember('@member.StudentId', '@member.StudentName', @group.Id)"
                                                    title="حذف از گروه">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        </div>
                                    </div>
                                }
                                @if (group.Members.Count > 4)
                                {
                                    <div class="more-members-indicator">
                                        <span>+@(group.Members.Count - 4) عضو دیگر</span>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="no-members-section">
                            <div class="no-members-content">
                                <i class="fas fa-user-plus"></i>
                                <span>هنوز عضوی اضافه نشده</span>
                            </div>
                        </div>
                    }
                    
                    <!-- Action Buttons -->
                    <div class="group-actions-footer">
                        <a asp-action="ManageMembers" asp-route-groupId="@group.Id" class="action-btn-footer primary">
                            <i class="fas fa-users"></i>
                            <span>مدیریت اعضا</span>
                        </a>
                        <a href="#" onclick="editGroup(@group.Id, '@group.Name')" class="action-btn-footer info">
                            <i class="fas fa-edit"></i>
                            <span>ویرایش</span>
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <!-- Empty State -->
    <div class="empty-state-minimal">
        <div class="empty-icon">
            <i class="fas fa-users"></i>
        </div>
        <h3>هنوز گروهی ایجاد نشده</h3>
        <p>اولین گروه دانش‌آموزی خود را ایجاد کنید تا بتوانید دانش‌آموزان را سازماندهی کنید</p>
        <a asp-action="Create" asp-route-planId="@teachingPlanId" class="btn-action-primary">
            <i class="fas fa-plus"></i>
            <span>افزودن گروه جدید</span>
        </a>
    </div>
}

<!-- Edit Group Modal -->
<div class="modal fade" id="editGroupModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">ویرایش گروه</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="editGroupForm" method="post">
                <div class="modal-body">
                    <input type="hidden" id="editGroupId" name="Id" />
                    <input type="hidden" name="TeachingPlanId" value="@teachingPlanId" />
                    <div class="mb-3">
                        <label for="editGroupName" class="form-label">نام گروه</label>
                        <input type="text" class="form-control" id="editGroupName" name="Name" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">لغو</button>
                    <button type="submit" class="btn btn-primary">ذخیره تغییرات</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles {
    <style>
        /* Breadcrumb Link */
        .breadcrumb-link {
            color: #667eea;
            text-decoration: none;
            font-size: 0.813rem;
            transition: all 0.2s;
        }

        .breadcrumb-link:hover {
            color: #5a6fd8;
            text-decoration: underline;
        }

        /* Action Button */
        .btn-action-primary {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.625rem 1.125rem;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 8px;
            text-decoration: none;
            font-size: 0.813rem;
            font-weight: 500;
            transition: all 0.2s;
            border: none;
        }

        .btn-action-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
            color: white;
        }

        /* Filter Bar */
        .filter-bar-minimal {
            background: white;
            border-radius: 8px;
            padding: 0.875rem 1rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border: 1px solid #e9ecef;
        }

        .filter-group {
            display: flex;
            gap: 0.5rem;
            flex-wrap: wrap;
        }

        .filter-btn-minimal {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            background: white;
            border: 1px solid #e2e8f0;
            border-radius: 6px;
            font-size: 0.813rem;
            font-weight: 500;
            color: #4a5568;
            cursor: pointer;
            transition: all 0.2s;
        }

        .filter-btn-minimal:hover {
            background: #f7fafc;
            border-color: #cbd5e0;
        }

        .filter-btn-minimal.active {
            background: #667eea;
            border-color: #667eea;
            color: white;
        }

        .drag-info {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.75rem;
            color: #adb5bd;
        }

        .drag-info i {
            color: #667eea;
        }

        /* Groups Sortable List */
        .groups-sortable-list {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1rem;
        }

        .group-card-draggable {
            background: white;
            border-radius: 12px;
            border: 2px solid #e9ecef;
            overflow: hidden;
            transition: all 0.2s;
            position: relative;
        }

        .group-card-draggable:hover {
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            border-color: #667eea;
        }

        /* Card Content */
        .group-card-content {
            padding: 1.25rem;
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        /* Header Section */
        .group-header-section {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            gap: 1rem;
        }

        .group-info {
            flex: 1;
        }

        .group-title-main {
            font-size: 1.125rem;
            font-weight: 600;
            color: #1a1a1a;
            margin: 0 0 0.5rem 0;
        }

        .group-meta-info {
            display: flex;
            gap: 0.75rem;
        }

        .member-count-badge {
            display: flex;
            align-items: center;
            gap: 0.375rem;
            padding: 0.5rem 0.75rem;
            background: #f8f9fa;
            border-radius: 6px;
            font-size: 0.75rem;
            color: #6c757d;
        }

        .member-count-badge i {
            font-size: 0.75rem;
            color: #adb5bd;
        }

        .group-actions-top {
            display: flex;
            align-items: center;
            gap: 0.625rem;
        }

        /* Icon Button */
        .btn-icon-minimal {
            width: 32px;
            height: 32px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: none;
            border: 1px solid #e9ecef;
            border-radius: 6px;
            color: #6c757d;
            cursor: pointer;
            transition: all 0.2s;
        }

        .btn-icon-minimal:hover {
            background: #f8f9fa;
            border-color: #667eea;
            color: #667eea;
        }

        /* Members Preview Section */
        .members-preview-section {
            padding: 1rem;
            background: #f8f9fa;
            border-radius: 8px;
            border: 1px solid #e9ecef;
        }

        .members-header {
            margin-bottom: 0.875rem;
            padding-bottom: 0.625rem;
            border-bottom: 2px solid #e9ecef;
        }

        .members-title {
            font-size: 0.875rem;
            font-weight: 600;
            color: #2d3748;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .members-title i {
            color: #667eea;
        }

        .members-list-preview {
            display: flex;
            flex-direction: column;
            gap: 0.625rem;
        }

        .member-item-preview {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding: 0.5rem;
            background: white;
            border-radius: 6px;
            border: 1px solid #e9ecef;
            transition: all 0.2s;
        }

        .member-item-preview:hover {
            border-color: #667eea;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
        }

        .member-avatar-small {
            width: 28px;
            height: 28px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: rgba(102, 126, 234, 0.1);
            border-radius: 6px;
            color: #667eea;
            font-size: 0.75rem;
            flex-shrink: 0;
        }

        .member-details {
            flex: 1;
        }

        .member-name-small {
            font-size: 0.813rem;
            font-weight: 500;
            color: #495057;
        }

        /* Drag and Drop Styles */
        .draggable-student {
            cursor: grab;
            transition: all 0.2s;
        }

        .draggable-student:hover {
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .draggable-student:active {
            cursor: grabbing;
        }

        .draggable-student.dragging {
            opacity: 0.5;
            transform: rotate(5deg);
        }

        .member-actions-preview {
            display: flex;
            align-items: center;
            opacity: 0;
            transition: opacity 0.2s;
        }

        .member-item-preview:hover .member-actions-preview {
            opacity: 1;
        }

        .btn-remove-member-preview {
            width: 20px;
            height: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            border: none;
            border-radius: 4px;
            background: rgba(220, 53, 69, 0.1);
            color: #dc3545;
            cursor: pointer;
            transition: all 0.2s;
            font-size: 0.75rem;
        }

        .btn-remove-member-preview:hover {
            background: #dc3545;
            color: white;
        }

        /* Drop Zone Styles */
        .members-list-preview.drop-zone {
            border: 2px dashed #667eea;
            background: rgba(102, 126, 234, 0.05);
        }

        .members-list-preview.drop-zone-active {
            border-color: #28a745;
            background: rgba(40, 167, 69, 0.05);
        }

        .more-members-indicator {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            padding: 0.5rem;
            font-size: 0.75rem;
            color: #adb5bd;
            background: #f8f9fa;
            border-radius: 6px;
        }

        /* No Members Section */
        .no-members-section {
            padding: 1rem;
            background: #f8f9fa;
            border-radius: 8px;
            border: 1px solid #e9ecef;
        }

        .no-members-content {
            text-align: center;
            color: #6c757d;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 0.5rem;
        }

        .no-members-content i {
            font-size: 1.5rem;
            color: #dee2e6;
        }

        /* Action Buttons Footer */
        .group-actions-footer {
            display: flex;
            gap: 0.5rem;
            padding-top: 0.75rem;
            border-top: 1px solid #f0f0f0;
        }

        .action-btn-footer {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.375rem;
            padding: 0.625rem;
            border-radius: 6px;
            text-decoration: none;
            font-size: 0.75rem;
            font-weight: 500;
            transition: all 0.2s;
            border: 1px solid;
        }

        .action-btn-footer i {
            font-size: 0.813rem;
        }

        .action-btn-footer.primary {
            background: rgba(102, 126, 234, 0.1);
            color: #667eea;
            border-color: rgba(102, 126, 234, 0.2);
        }

        .action-btn-footer.primary:hover {
            background: #667eea;
            color: white;
        }

        .action-btn-footer.info {
            background: rgba(23, 162, 184, 0.1);
            color: #17a2b8;
            border-color: rgba(23, 162, 184, 0.2);
        }

        .action-btn-footer.info:hover {
            background: #17a2b8;
            color: white;
        }

        /* Empty State */
        .empty-state-minimal {
            text-align: center;
            padding: 4rem 2rem;
            background: white;
            border-radius: 8px;
            border: 2px dashed #e9ecef;
        }

        .empty-icon {
            font-size: 3rem;
            color: #dee2e6;
            margin-bottom: 1.5rem;
        }

        .empty-state-minimal h3 {
            font-size: 1.125rem;
            font-weight: 600;
            color: #495057;
            margin-bottom: 0.5rem;
        }

        .empty-state-minimal p {
            font-size: 0.875rem;
            color: #6c757d;
            margin-bottom: 1.5rem;
        }

        /* Responsive */
        @@media (max-width: 767.98px) {
            .group-actions-footer {
                flex-direction: column;
            }

            .action-btn-footer {
                width: 100%;
            }
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Filter functionality
            $('.filter-btn-minimal').on('click', function() {
                const filter = $(this).data('filter');
                
                // Update active button
                $('.filter-btn-minimal').removeClass('active');
                $(this).addClass('active');
                
                // Filter groups
                $('.group-card-draggable').each(function() {
                    const memberCount = parseInt($(this).data('member-count'));
                    
                    if (filter === 'all') {
                        $(this).show();
                    } else if (filter === 'with-members' && memberCount > 0) {
                        $(this).show();
                    } else if (filter === 'empty' && memberCount === 0) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            });

            // Drag and Drop functionality
            let draggedStudent = null;
            let draggedFromGroup = null;

            // Drag start
            $('.draggable-student').on('dragstart', function(e) {
                draggedStudent = {
                    id: $(this).data('student-id'),
                    name: $(this).data('student-name'),
                    groupId: $(this).data('group-id')
                };
                draggedFromGroup = $(this).data('group-id');
                $(this).addClass('dragging');
                
                // Set drag data
                e.originalEvent.dataTransfer.setData('text/plain', draggedStudent.id);
                e.originalEvent.dataTransfer.effectAllowed = 'move';
            });

            // Drag end
            $('.draggable-student').on('dragend', function() {
                $(this).removeClass('dragging');
                $('.members-list-preview').removeClass('drop-zone drop-zone-active');
                draggedStudent = null;
                draggedFromGroup = null;
            });

            // Drag over (drop zone)
            $('.members-list-preview').on('dragover', function(e) {
                e.preventDefault();
                e.originalEvent.dataTransfer.dropEffect = 'move';
                
                const targetGroupId = $(this).data('group-id');
                if (targetGroupId !== draggedFromGroup) {
                    $(this).addClass('drop-zone-active');
                }
            });

            // Drag leave (drop zone)
            $('.members-list-preview').on('dragleave', function(e) {
                $(this).removeClass('drop-zone-active');
            });

            // Drop
            $('.members-list-preview').on('drop', function(e) {
                e.preventDefault();
                $(this).removeClass('drop-zone drop-zone-active');
                
                const targetGroupId = $(this).data('group-id');
                
                if (draggedStudent && targetGroupId !== draggedFromGroup) {
                    transferStudent(draggedStudent.id, draggedStudent.name, draggedFromGroup, targetGroupId);
                }
            });
        });

        function editGroup(groupId, groupName) {
            document.getElementById('editGroupId').value = groupId;
            document.getElementById('editGroupName').value = groupName;
            document.getElementById('editGroupForm').action = '@Url.Action("Edit", "StudentGroup")';
            
            var modal = new bootstrap.Modal(document.getElementById('editGroupModal'));
            modal.show();
        }

        function deleteGroup(groupId, groupName) {
            if (confirm(`آیا مطمئن هستید که می‌خواهید گروه "${groupName}" را حذف کنید؟`)) {
                var form = document.createElement('form');
                form.method = 'POST';
                form.action = '@Url.Action("Delete", "StudentGroup")';
                
                var token = document.createElement('input');
                token.type = 'hidden';
                token.name = '__RequestVerificationToken';
                token.value = '@Html.AntiForgeryToken()';
                
                var idInput = document.createElement('input');
                idInput.type = 'hidden';
                idInput.name = 'id';
                idInput.value = groupId;
                
                form.appendChild(token);
                form.appendChild(idInput);
                document.body.appendChild(form);
                form.submit();
            }
        }

        // Remove student from group
        function removeMember(studentId, studentName, groupId) {
            if (confirm(`آیا می‌خواهید "${studentName}" را از گروه حذف کنید؟`)) {
                $.ajax({
                    url: '@Url.Action("RemoveMemberAjax", "StudentGroup")',
                    type: 'POST',
                    data: {
                        GroupId: groupId,
                        StudentId: studentId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message || 'دانش‌آموز با موفقیت حذف شد');
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            showToast('error', response.message || 'خطا در حذف دانش‌آموز');
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('AJAX Error:', xhr.responseText);
                        showToast('error', 'خطا در ارتباط با سرور');
                    }
                });
            }
        }

        // Transfer student between groups
        function transferStudent(studentId, studentName, fromGroupId, toGroupId) {
            if (confirm(`آیا می‌خواهید "${studentName}" را به گروه جدید منتقل کنید؟`)) {
                $.ajax({
                    url: '@Url.Action("TransferMember", "StudentGroup")',
                    type: 'POST',
                    data: {
                        FromGroupId: fromGroupId,
                        ToGroupId: toGroupId,
                        StudentId: studentId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message || 'دانش‌آموز با موفقیت منتقل شد');
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            showToast('error', response.message || 'خطا در انتقال دانش‌آموز');
                        }
                    },
                    error: function() {
                        showToast('error', 'خطا در ارتباط با سرور');
                    }
                });
            }
        }

        // Toast notification
        function showToast(type, message) {
            const bgColor = type === 'success' ? '#28a745' : '#dc3545';
            const icon = type === 'success' ? 'check-circle' : 'exclamation-circle';
            
            const toast = $(`
                <div class="toast-notification" style="position: fixed; top: 80px; left: 20px; background: ${bgColor}; color: white; padding: 0.875rem 1.125rem; border-radius: 8px; display: flex; align-items: center; gap: 0.625rem; font-size: 0.813rem; z-index: 9999; box-shadow: 0 4px 12px rgba(0,0,0,0.15); animation: slideInLeft 0.3s ease-out;">
                    <i class="fas fa-${icon}"></i>
                    <span>${message}</span>
                </div>
            `);

            $('body').append(toast);

            setTimeout(function() {
                toast.fadeOut(300, function() {
                    $(this).remove();
                });
            }, 3000);
        }

        // Auto-hide alerts after 5 seconds
        setTimeout(function() {
            var alerts = document.querySelectorAll('.alert');
            alerts.forEach(function(alert) {
                var bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);
    </script>
}
