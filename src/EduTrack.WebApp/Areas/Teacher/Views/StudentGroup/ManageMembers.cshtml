@model EduTrack.Application.Common.Models.StudentGroupDto
@{
    ViewData["Title"] = "مدیریت اعضای گروه";
    var groupId = ViewBag.GroupId as int?;
    var groupName = ViewBag.GroupName as string;
    var teachingPlanTitle = ViewBag.TeachingPlanTitle as string;
    var courseTitle = ViewBag.CourseTitle as string;
    var availableStudents = ViewBag.AvailableStudents as List<EduTrack.Application.Common.Models.UserDto> ?? new List<EduTrack.Application.Common.Models.UserDto>();
}

<!-- Page Header -->
<div class="page-header-minimal mb-3">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1 class="page-title">مدیریت اعضای گروه</h1>
            <p class="page-subtitle mb-0">
                <a asp-controller="Courses" asp-action="Index" class="breadcrumb-link">
                    <i class="fas fa-chevron-right"></i> دوره‌ها
                </a>
                <span class="mx-2">/</span>
                <a asp-controller="TeachingPlan" asp-action="Index" asp-route-courseId="@ViewBag.CourseId" class="breadcrumb-link">
                    @courseTitle
                </a>
                <span class="mx-2">/</span>
                <a asp-controller="StudentGroup" asp-action="Index" asp-route-planId="@Model.TeachingPlanId" class="breadcrumb-link">
                    @teachingPlanTitle
                </a>
                <span class="mx-2">/</span>
                <span>@groupName</span>
            </p>
        </div>
        <a asp-action="Index" asp-route-planId="@Model.TeachingPlanId" class="btn-action-primary">
            <i class="fas fa-arrow-right"></i>
            <span>بازگشت به گروه‌ها</span>
        </a>
    </div>
</div>

<!-- Members Management Container -->
<div class="members-management-container">
    <div class="row">
        <!-- Current Members -->
        <div class="col-lg-6">
            <div class="card-minimal">
                <div class="card-header-minimal">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3 class="card-title-minimal">
                            <i class="fas fa-user-check me-2"></i>
                            اعضای فعلی گروه
                        </h3>
                        <div class="member-count-badge">
                            @Model.Members.Count عضو
                        </div>
                    </div>
                </div>
                <div class="card-body-minimal">
                    <div class="members-list">
                        @if (Model.Members.Any())
                        {
                            @foreach (var member in Model.Members)
                            {
                                <div class="member-item-minimal" data-member-id="@member.StudentId">
                                    <div class="member-avatar-minimal">
                                        <i class="fas fa-user"></i>
                                    </div>
                                    <div class="member-info-minimal">
                                        <h4 class="member-name-minimal">@member.StudentName</h4>
                                        <p class="member-email-minimal">@member.StudentEmail</p>
                                    </div>
                                    <div class="member-actions-minimal">
                                        <button class="btn-action-inline remove" onclick="removeMember('@member.StudentId', '@member.StudentName')" title="حذف از گروه">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="empty-state-minimal">
                                <div class="empty-icon">
                                    <i class="fas fa-user-plus"></i>
                                </div>
                                <h4>هنوز عضوی اضافه نشده</h4>
                                <p>از بخش "دانش‌آموزان موجود" اعضا را به گروه اضافه کنید</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Available Students -->
        <div class="col-lg-6">
            <div class="card-minimal">
                <div class="card-header-minimal">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3 class="card-title-minimal">
                            <i class="fas fa-user-plus me-2"></i>
                            دانش‌آموزان موجود
                        </h3>
                        <div class="available-stats">
                            <span class="available-count">@availableStudents.Count دانش‌آموز</span>
                        </div>
                    </div>
                    <div class="card-subheader-minimal">
                        <div class="select-all-section">
                            <label class="select-all-label">
                                <input type="checkbox" id="selectAll" onchange="toggleSelectAll()">
                                <span>انتخاب همه</span>
                            </label>
                        </div>
                        <div class="search-box">
                            <input type="text" id="studentSearch" placeholder="جستجو در دانش‌آموزان..." class="search-input">
                            <i class="fas fa-search search-icon"></i>
                        </div>
                    </div>
                </div>
                <div class="card-body-minimal">
                    <!-- Bulk Actions -->
                    <div class="bulk-actions" id="bulkActions" style="display: none;">
                        <div class="bulk-info">
                            <span id="selectedCount">0</span> دانش‌آموز انتخاب شده
                        </div>
                        <div class="bulk-buttons">
                            <button class="btn-bulk-add" onclick="addSelectedMembers()">
                                <i class="fas fa-plus"></i>
                                اضافه کردن انتخاب شده‌ها
                            </button>
                            <button class="btn-bulk-cancel" onclick="clearSelection()">
                                <i class="fas fa-times"></i>
                                لغو انتخاب
                            </button>
                        </div>
                    </div>

                    <div class="available-students-list" id="availableStudentsList">
                        @if (availableStudents.Any())
                        {
                            @foreach (var student in availableStudents)
                            {
                                <div class="student-item-minimal" data-student-id="@student.Id">
                                    <div class="student-checkbox">
                                        <input type="checkbox" class="student-select" value="@student.Id" onchange="updateBulkActions()">
                                    </div>
                                    <div class="student-avatar-minimal">
                                        <i class="fas fa-user"></i>
                                    </div>
                                    <div class="student-info-minimal">
                                        <h4 class="student-name-minimal">@student.FullName</h4>
                                        <p class="student-email-minimal">@student.Email</p>
                                        <div class="student-meta-minimal">
                                            <span class="enrollment-status-minimal">
                                                <i class="fas fa-graduation-cap"></i>
                                                ثبت‌نام شده در دوره
                                            </span>
                                        </div>
                                    </div>
                                    <div class="student-actions-minimal">
                                        <button class="btn-action-inline add" onclick="addMember('@student.Id', '@student.FullName')" title="اضافه به گروه">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="empty-state-minimal">
                                <div class="empty-icon">
                                    <i class="fas fa-graduation-cap"></i>
                                </div>
                                <h4>دانش‌آموزی یافت نشد</h4>
                                <p>ابتدا دانش‌آموزان را به دوره اضافه کنید</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Members Form (Hidden) -->
<form id="addMembersForm" method="post" asp-action="AddMembers" style="display: none;">
    @Html.AntiForgeryToken()
    <input type="hidden" name="GroupId" value="@groupId" />
    <input type="hidden" name="StudentIds" id="studentIdsInput" />
</form>

<!-- Remove Member Form (Hidden) -->
<form id="removeMemberForm" method="post" asp-action="RemoveMember" style="display: none;">
    @Html.AntiForgeryToken()
    <input type="hidden" name="GroupId" value="@groupId" />
    <input type="hidden" name="StudentId" id="studentIdInput" />
</form>

@section Styles {
    <style>
        /* Breadcrumb Link */
        .breadcrumb-link {
            color: #667eea;
            text-decoration: none;
            font-size: 0.813rem;
            transition: all 0.2s;
        }

        .breadcrumb-link:hover {
            color: #5a6fd8;
            text-decoration: underline;
        }

        /* Action Button */
        .btn-action-primary {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.625rem 1.125rem;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 8px;
            text-decoration: none;
            font-size: 0.813rem;
            font-weight: 500;
            transition: all 0.2s;
            border: none;
        }

        .btn-action-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
            color: white;
        }

        /* Members Management Container */
        .members-management-container {
            margin-bottom: 2rem;
        }

        /* Card Minimal */
        .card-minimal {
            background: white;
            border-radius: 8px;
            border: 1px solid #e9ecef;
            overflow: hidden;
            height: 100%;
        }

        .card-header-minimal {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            padding: 1.25rem;
            border-bottom: 1px solid #e9ecef;
        }

        .card-subheader-minimal {
            padding: 0.75rem 1.25rem;
            background: #f8f9fa;
            border-bottom: 1px solid #e9ecef;
            display: flex;
            justify-content: space-between;
            align-items: center;
            gap: 1rem;
        }

        .card-title-minimal {
            font-size: 1.125rem;
            font-weight: 600;
            color: #2d3748;
            margin: 0;
        }

        .card-body-minimal {
            padding: 1rem;
            max-height: 600px;
            overflow-y: auto;
        }

        .member-count-badge {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.875rem;
            font-weight: 600;
        }

        .available-count {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.875rem;
            font-weight: 600;
        }

        .select-all-section {
            display: flex;
            align-items: center;
        }

        .select-all-label {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            cursor: pointer;
            font-size: 0.875rem;
            color: #6c757d;
            font-weight: 500;
        }

        .select-all-label input[type="checkbox"] {
            width: 16px;
            height: 16px;
            accent-color: #667eea;
        }

        /* Search Box */
        .search-box {
            position: relative;
            width: 250px;
        }

        .search-input {
            width: 100%;
            padding: 0.5rem 0.75rem 0.5rem 2rem;
            border: 1px solid #e2e8f0;
            border-radius: 6px;
            font-size: 0.813rem;
            transition: all 0.2s;
        }

        .search-input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .search-icon {
            position: absolute;
            left: 0.75rem;
            top: 50%;
            transform: translateY(-50%);
            color: #6c757d;
            font-size: 0.813rem;
        }

        /* Members List */
        .members-list, .available-students-list {
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
        }

        .member-item-minimal, .student-item-minimal {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding: 0.75rem;
            background: #f8f9fa;
            border-radius: 6px;
            border: 1px solid #e9ecef;
            transition: all 0.2s;
        }

        .member-item-minimal:hover, .student-item-minimal:hover {
            border-color: #667eea;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
            background: white;
        }

        .student-checkbox {
            display: flex;
            align-items: center;
        }

        .student-select {
            width: 16px;
            height: 16px;
            accent-color: #667eea;
            cursor: pointer;
        }

        .member-avatar-minimal, .student-avatar-minimal {
            width: 36px;
            height: 36px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: rgba(102, 126, 234, 0.1);
            border-radius: 8px;
            color: #667eea;
            font-size: 0.875rem;
            flex-shrink: 0;
        }

        .member-info-minimal, .student-info-minimal {
            flex: 1;
        }

        .member-name-minimal, .student-name-minimal {
            font-size: 0.875rem;
            font-weight: 600;
            color: #2d3748;
            margin: 0 0 0.25rem 0;
        }

        .member-email-minimal, .student-email-minimal {
            font-size: 0.75rem;
            color: #718096;
            margin: 0;
        }

        .student-meta-minimal {
            margin-top: 0.25rem;
        }

        .enrollment-status-minimal {
            display: flex;
            align-items: center;
            gap: 0.25rem;
            font-size: 0.688rem;
            color: #28a745;
            background: rgba(40, 167, 69, 0.1);
            padding: 0.25rem 0.5rem;
            border-radius: 12px;
        }

        .enrollment-status-minimal i {
            font-size: 0.688rem;
        }

        .member-actions-minimal, .student-actions-minimal {
            display: flex;
            align-items: center;
        }

        .btn-action-inline {
            width: 28px;
            height: 28px;
            display: flex;
            align-items: center;
            justify-content: center;
            border: 1px solid #e2e8f0;
            border-radius: 6px;
            color: #4a5568;
            text-decoration: none;
            transition: all 0.2s;
            font-size: 0.75rem;
            cursor: pointer;
            background: none;
        }

        .btn-action-inline.add:hover {
            background: #48bb78;
            border-color: #48bb78;
            color: white;
        }

        .btn-action-inline.remove:hover {
            background: #f56565;
            border-color: #f56565;
            color: white;
        }

        /* Bulk Actions */
        .bulk-actions {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 1rem 1.5rem;
            border-radius: 8px;
            margin-bottom: 1rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .bulk-info {
            font-weight: 600;
            font-size: 0.875rem;
        }

        .bulk-buttons {
            display: flex;
            gap: 0.75rem;
        }

        .btn-bulk-add, .btn-bulk-cancel {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 6px;
            font-size: 0.813rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s;
        }

        .btn-bulk-add {
            background: rgba(255, 255, 255, 0.2);
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.3);
        }

        .btn-bulk-add:hover {
            background: rgba(255, 255, 255, 0.3);
        }

        .btn-bulk-cancel {
            background: transparent;
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.3);
        }

        .btn-bulk-cancel:hover {
            background: rgba(255, 255, 255, 0.1);
        }

        /* Empty State */
        .empty-state-minimal {
            text-align: center;
            padding: 3rem 2rem;
            color: #6c757d;
        }

        .empty-icon {
            font-size: 2.5rem;
            color: #dee2e6;
            margin-bottom: 1rem;
        }

        .empty-state-minimal h4 {
            font-size: 1rem;
            font-weight: 600;
            color: #495057;
            margin-bottom: 0.5rem;
        }

        .empty-state-minimal p {
            font-size: 0.813rem;
            margin: 0;
        }

        /* Responsive */
        @@media (max-width: 991.98px) {
            .card-subheader-minimal {
                flex-direction: column;
                gap: 0.75rem;
                align-items: stretch;
            }

            .search-box {
                width: 100%;
            }
        }

        @@media (max-width: 767.98px) {
            .member-item-minimal, .student-item-minimal {
                flex-direction: column;
                text-align: center;
                gap: 0.5rem;
            }

            .member-info-minimal, .student-info-minimal {
                text-align: center;
            }
        }
    </style>
}

@section Scripts {
    <script>
        // Search functionality
        document.getElementById('studentSearch').addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const studentCards = document.querySelectorAll('.student-item-minimal');
            
            studentCards.forEach(card => {
                const name = card.querySelector('.student-name-minimal').textContent.toLowerCase();
                const email = card.querySelector('.student-email-minimal').textContent.toLowerCase();
                
                if (name.includes(searchTerm) || email.includes(searchTerm)) {
                    card.style.display = 'flex';
                } else {
                    card.style.display = 'none';
                }
            });
        });

        // Add member function
        function addMember(studentId, studentName) {
            if (confirm(`آیا می‌خواهید "${studentName}" را به گروه اضافه کنید؟`)) {
                document.getElementById('studentIdsInput').value = studentId;
                document.getElementById('addMembersForm').submit();
            }
        }

        // Remove member function
        function removeMember(studentId, studentName) {
            if (confirm(`آیا می‌خواهید "${studentName}" را از گروه حذف کنید؟`)) {
                document.getElementById('studentIdInput').value = studentId;
                document.getElementById('removeMemberForm').submit();
            }
        }

        // Bulk selection functions
        function updateBulkActions() {
            const selectedCheckboxes = document.querySelectorAll('.student-select:checked');
            const bulkActions = document.getElementById('bulkActions');
            const selectedCount = document.getElementById('selectedCount');
            
            if (selectedCheckboxes.length > 0) {
                bulkActions.style.display = 'flex';
                selectedCount.textContent = selectedCheckboxes.length;
            } else {
                bulkActions.style.display = 'none';
            }
        }

        function addSelectedMembers() {
            const selectedCheckboxes = document.querySelectorAll('.student-select:checked');
            const studentIds = Array.from(selectedCheckboxes).map(cb => cb.value);
            
            if (studentIds.length === 0) {
                alert('لطفاً حداقل یک دانش‌آموز را انتخاب کنید');
                return;
            }

            if (confirm(`آیا می‌خواهید ${studentIds.length} دانش‌آموز را به گروه اضافه کنید؟`)) {
                document.getElementById('studentIdsInput').value = studentIds.join(',');
                document.getElementById('addMembersForm').submit();
            }
        }

        function clearSelection() {
            const checkboxes = document.querySelectorAll('.student-select');
            checkboxes.forEach(cb => cb.checked = false);
            document.getElementById('selectAll').checked = false;
            updateBulkActions();
        }

        function toggleSelectAll() {
            const selectAllCheckbox = document.getElementById('selectAll');
            const studentCheckboxes = document.querySelectorAll('.student-select');
            
            studentCheckboxes.forEach(cb => {
                cb.checked = selectAllCheckbox.checked;
            });
            
            updateBulkActions();
        }

        // Auto-hide alerts after 5 seconds
        setTimeout(function() {
            var alerts = document.querySelectorAll('.alert');
            alerts.forEach(function(alert) {
                var bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);
    </script>
}