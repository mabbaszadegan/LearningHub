@model List<EduTrack.Application.Common.Models.TeachingSessionReportDto>
@{
    ViewData["Title"] = "جلسات آموزشی";
    var planId = ViewBag.TeachingPlanId as int?;
    var planTitle = ViewBag.TeachingPlanTitle as string;
    var courseTitle = ViewBag.CourseTitle as string;
    
    // Prepare navigation actions
    var navigationActions = new List<NavigationAction>
    {
        new NavigationAction
        {
            Text = "جلسه جدید",
            Url = Url.Action("Create", new { planId = planId }) ?? "#",
            CssClass = "btn-action-primary",
            Icon = "fas fa-plus"
        }
    };
    
    // Prepare breadcrumb items
    var breadcrumbItems = new List<BreadcrumbItem>
    {
        new BreadcrumbItem
        {
            Text = "دوره‌ها",
            Url = Url.Action("Index", "Courses"),
            Icon = "fas fa-chevron-right"
        },
        new BreadcrumbItem
        {
            Text = courseTitle ?? "دوره",
            Url = Url.Action("Index", "TeachingPlan", new { courseId = ViewBag.CourseId })
        },
        new BreadcrumbItem
        {
            Text = planTitle ?? "پلن آموزشی",
            IsActive = true
        }
    };
}

@await Component.InvokeAsync("PageNavigation", new { 
    title = "جلسات آموزشی", 
    breadcrumbItems = breadcrumbItems, 
    actions = navigationActions 
})

<!-- Filter Bar -->
@if (Model.Any())
{
    <div class="filter-bar-minimal mb-3">
        <div class="filter-group">
            <button class="filter-btn-minimal active" data-filter="all">
                <i class="fas fa-calendar-alt"></i>
                <span>همه (@Model.Count)</span>
            </button>
            <button class="filter-btn-minimal" data-filter="today">
                <i class="fas fa-calendar-day"></i>
                <span>امروز (@Model.Count(s => s.SessionDate.Date == DateTime.Today))</span>
            </button>
            <button class="filter-btn-minimal" data-filter="this-week">
                <i class="fas fa-calendar-week"></i>
                <span>این هفته (@Model.Count(s => s.SessionDate >= DateTime.Today.AddDays(-(int)DateTime.Today.DayOfWeek)))</span>
            </button>
        </div>
        <div class="session-info">
            <i class="fas fa-info-circle"></i>
            <span>مدیریت و پیگیری جلسات آموزشی</span>
        </div>
    </div>
}

@if (Model.Any())
{
    <!-- Sessions Grid -->
    <div class="sessions-grid" id="sessionsContainer">
        @foreach (var session in Model.OrderByDescending(s => s.SessionDate))
        {
            <div class="session-card" data-session-date="@session.SessionDate.ToString("yyyy-MM-dd")">
                <!-- Session Header -->
                <div class="session-header">
                    <div class="session-date-info">
                        <div class="session-date">
                            <span class="day">@session.SessionDate.ToString("dd")</span>
                            <span class="month">@session.SessionDate.ToString("MMM")</span>
                        </div>
                        <div class="session-time">
                            <i class="fas fa-clock"></i>
                            <span>@session.SessionDate.ToString("HH:mm")</span>
                        </div>
                    </div>
                    <div class="session-mode-badge">
                        <span class="badge bg-@(session.Mode == EduTrack.Domain.Enums.SessionMode.InPerson ? "primary" : session.Mode == EduTrack.Domain.Enums.SessionMode.Online ? "success" : "warning")">
                            @(session.Mode == EduTrack.Domain.Enums.SessionMode.InPerson ? "حضوری" : session.Mode == EduTrack.Domain.Enums.SessionMode.Online ? "آنلاین" : "ترکیبی")
                        </span>
                    </div>
                </div>

                <!-- Session Content -->
                <div class="session-content">
                    <h3 class="session-title">@(session.Title ?? "جلسه بدون عنوان")</h3>
                    
                    @if (!string.IsNullOrEmpty(session.Notes))
                    {
                        <p class="session-notes">
                            @(session.Notes.Length > 120 ? session.Notes.Substring(0, 120) + "..." : session.Notes)
                        </p>
                    }

                    @if (!string.IsNullOrEmpty(session.Location))
                    {
                        <div class="session-location">
                            <i class="fas fa-map-marker-alt"></i>
                            <span>@session.Location</span>
                        </div>
                    }

                    <!-- Attendance Stats -->
                    <div class="session-stats">
                        <div class="stat-item">
                            <i class="fas fa-user-check"></i>
                            <span>@session.PresentCount حاضر</span>
                        </div>
                        <div class="stat-item">
                            <i class="fas fa-user-times"></i>
                            <span>@session.AbsentCount غایب</span>
                        </div>
                        <div class="stat-item">
                            <i class="fas fa-users"></i>
                            <span>@session.AttendanceCount کل</span>
                        </div>
                    </div>
                </div>

                <!-- Session Actions -->
                <div class="session-actions">
                    <a asp-action="Complete" asp-route-id="@session.Id" class="action-btn success">
                        <i class="fas fa-check-circle"></i>
                        <span>تکمیل گزارش</span>
                    </a>
                    <a asp-action="Details" asp-route-id="@session.Id" class="action-btn primary">
                        <i class="fas fa-eye"></i>
                        <span>جزئیات</span>
                    </a>
                    <a asp-action="Edit" asp-route-id="@session.Id" class="action-btn info">
                        <i class="fas fa-edit"></i>
                        <span>ویرایش</span>
                    </a>
                </div>

                <!-- Session Meta -->
                <div class="session-meta">
                    <small class="text-muted">
                        <i class="fas fa-user-tie"></i>
                        ایجاد شده توسط @session.CreatedByTeacherName
                        <span class="mx-2">•</span>
                        <i class="fas fa-clock"></i>
                        @session.CreatedAt.ToString("dd MMM yyyy")
                    </small>
                </div>
            </div>
        }
    </div>
}
else
{
    <!-- Empty State -->
    <div class="empty-state-minimal">
        <div class="empty-icon">
            <i class="fas fa-chalkboard-teacher"></i>
        </div>
        <h3>هنوز جلسه‌ای ایجاد نشده</h3>
        <p>اولین جلسه آموزشی خود را برای این پلن ایجاد کنید</p>
        <a asp-action="Create" asp-route-planId="@planId" class="btn-action-primary">
            <i class="fas fa-plus"></i>
            <span>ایجاد جلسه جدید</span>
        </a>
    </div>
}

@section Styles {
    <style>
        /* Page Header */
        .btn-action-primary {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.625rem 1.125rem;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 8px;
            text-decoration: none;
            font-size: 0.813rem;
            font-weight: 500;
            transition: all 0.2s;
            border: none;
        }

        .btn-action-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
            color: white;
        }

        /* Breadcrumb Link */
        .breadcrumb-link {
            color: #667eea;
            text-decoration: none;
            font-size: 0.813rem;
            transition: all 0.2s;
        }

        .breadcrumb-link:hover {
            color: #5a6fd8;
            text-decoration: underline;
        }

        /* Filter Bar */
        .filter-bar-minimal {
            background: white;
            border-radius: 8px;
            padding: 0.875rem 1rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border: 1px solid #e9ecef;
        }

        .filter-group {
            display: flex;
            gap: 0.5rem;
            flex-wrap: wrap;
        }

        .filter-btn-minimal {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            background: white;
            border: 1px solid #e2e8f0;
            border-radius: 6px;
            font-size: 0.813rem;
            font-weight: 500;
            color: #4a5568;
            cursor: pointer;
            transition: all 0.2s;
        }

        .filter-btn-minimal:hover {
            background: #f7fafc;
            border-color: #cbd5e0;
        }

        .filter-btn-minimal.active {
            background: #667eea;
            border-color: #667eea;
            color: white;
        }

        .session-info {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.75rem;
            color: #adb5bd;
        }

        .session-info i {
            color: #667eea;
        }

        /* Sessions Grid */
        .sessions-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 1rem;
        }

        .session-card {
            background: white;
            border-radius: 12px;
            border: 2px solid #e9ecef;
            overflow: hidden;
            transition: all 0.2s;
            position: relative;
        }

        .session-card:hover {
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            border-color: #667eea;
        }

        /* Session Header */
        .session-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-bottom: 1px solid #e9ecef;
        }

        .session-date-info {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .session-date {
            display: flex;
            flex-direction: column;
            align-items: center;
            background: white;
            border-radius: 8px;
            padding: 0.5rem;
            min-width: 60px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .session-date .day {
            font-size: 1.25rem;
            font-weight: 700;
            color: #667eea;
            line-height: 1;
        }

        .session-date .month {
            font-size: 0.75rem;
            color: #6c757d;
            text-transform: uppercase;
        }

        .session-time {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.875rem;
            color: #6c757d;
        }

        .session-time i {
            color: #667eea;
        }

        .session-mode-badge .badge {
            font-size: 0.75rem;
            padding: 0.375rem 0.75rem;
        }

        /* Session Content */
        .session-content {
            padding: 1rem;
        }

        .session-title {
            font-size: 1.125rem;
            font-weight: 600;
            color: #1a1a1a;
            margin: 0 0 0.75rem 0;
        }

        .session-notes {
            font-size: 0.875rem;
            color: #6c757d;
            margin: 0 0 0.75rem 0;
            line-height: 1.5;
        }

        .session-location {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.813rem;
            color: #6c757d;
            margin-bottom: 0.75rem;
        }

        .session-location i {
            color: #667eea;
        }

        /* Session Stats */
        .session-stats {
            display: flex;
            gap: 1rem;
            padding: 0.75rem 0;
            border-top: 1px solid #f0f0f0;
            border-bottom: 1px solid #f0f0f0;
            margin-bottom: 0.75rem;
        }

        .stat-item {
            display: flex;
            align-items: center;
            gap: 0.375rem;
            font-size: 0.75rem;
            color: #6c757d;
        }

        .stat-item i {
            font-size: 0.7rem;
            color: #adb5bd;
        }

        /* Session Actions */
        .session-actions {
            display: flex;
            gap: 0.5rem;
            padding: 0 1rem 1rem 1rem;
        }

        .action-btn {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.375rem;
            padding: 0.625rem;
            border-radius: 6px;
            text-decoration: none;
            font-size: 0.75rem;
            font-weight: 500;
            transition: all 0.2s;
            border: 1px solid;
        }

        .action-btn i {
            font-size: 0.813rem;
        }

        .action-btn.primary {
            background: rgba(102, 126, 234, 0.1);
            color: #667eea;
            border-color: rgba(102, 126, 234, 0.2);
        }

        .action-btn.primary:hover {
            background: #667eea;
            color: white;
        }

        .action-btn.info {
            background: rgba(23, 162, 184, 0.1);
            color: #17a2b8;
            border-color: rgba(23, 162, 184, 0.2);
        }

        .action-btn.info:hover {
            background: #17a2b8;
            color: white;
        }

        .action-btn.success {
            background: rgba(16, 185, 129, 0.1);
            color: #10b981;
            border-color: rgba(16, 185, 129, 0.2);
        }

        .action-btn.success:hover {
            background: #10b981;
            color: white;
        }

        /* Session Meta */
        .session-meta {
            padding: 0.75rem 1rem;
            background: #f8f9fa;
            border-top: 1px solid #e9ecef;
            text-align: center;
        }

        .session-meta i {
            margin-left: 0.25rem;
        }

        /* Empty State */
        .empty-state-minimal {
            text-align: center;
            padding: 4rem 2rem;
            background: white;
            border-radius: 8px;
            border: 2px dashed #e9ecef;
        }

        .empty-icon {
            font-size: 3rem;
            color: #dee2e6;
            margin-bottom: 1.5rem;
        }

        .empty-state-minimal h3 {
            font-size: 1.125rem;
            font-weight: 600;
            color: #495057;
            margin-bottom: 0.5rem;
        }

        .empty-state-minimal p {
            font-size: 0.875rem;
            color: #6c757d;
            margin-bottom: 1.5rem;
        }

        /* Responsive */
        @@media (max-width: 767.98px) {
            .sessions-grid {
                grid-template-columns: 1fr;
            }

            .filter-bar-minimal {
                flex-direction: column;
                gap: 1rem;
            }

            .session-info {
                display: none;
            }

            .session-actions {
                flex-direction: column;
            }
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Filter functionality
            $('.filter-btn-minimal').on('click', function() {
                const filter = $(this).data('filter');
                
                // Update active button
                $('.filter-btn-minimal').removeClass('active');
                $(this).addClass('active');
                
                // Filter sessions
                $('.session-card').each(function() {
                    const sessionDate = new Date($(this).data('session-date'));
                    const today = new Date();
                    const startOfWeek = new Date(today.setDate(today.getDate() - today.getDay()));
                    
                    if (filter === 'all') {
                        $(this).show();
                    } else if (filter === 'today') {
                        const isToday = sessionDate.toDateString() === new Date().toDateString();
                        $(this).toggle(isToday);
                    } else if (filter === 'this-week') {
                        const isThisWeek = sessionDate >= startOfWeek;
                        $(this).toggle(isThisWeek);
                    }
                });
            });

            // Auto-hide alerts after 5 seconds
            setTimeout(function() {
                var alerts = document.querySelectorAll('.alert');
                alerts.forEach(function(alert) {
                    var bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                });
            }, 5000);
        });
    </script>
}
