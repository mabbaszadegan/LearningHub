@model EduTrack.Application.Features.InteractiveLesson.Commands.CreateInteractiveLessonWithStagesCommand
@{
    ViewData["Title"] = "ایجاد درس تعاملی با مراحل";
    var course = ViewBag.Course as EduTrack.Domain.Entities.Course;
    var subChapters = ViewBag.SubChapters as List<EduTrack.Domain.Entities.SubChapter>;
    var stageTypes = ViewBag.StageTypes as EduTrack.Domain.Enums.InteractiveLessonStageType[];
    var arrangementTypes = ViewBag.ArrangementTypes as EduTrack.Domain.Enums.ContentArrangementType[];
}

<div class="interactive-lesson-creator">
    <!-- Header Section -->
    <div class="creator-header">
        <div class="header-content">
            <div class="header-icon">
                <i class="fas fa-play-circle"></i>
            </div>
            <div class="header-text">
                <h2>ایجاد درس تعاملی جدید</h2>
                <p>دوره: @course?.Title</p>
            </div>
        </div>
        <div class="header-actions">
            <button type="button" class="btn btn-outline-secondary" onclick="window.history.back()">
                <i class="fas fa-arrow-right"></i>
                بازگشت
            </button>
        </div>
    </div>

    <!-- Main Creator Interface -->
    <div class="creator-layout">
        <!-- Left Panel - Lesson Configuration -->
        <div class="creator-panel creator-panel-left">
            <div class="panel-header">
                <div class="panel-icon">
                    <i class="fas fa-cog"></i>
                </div>
                <h4>تنظیمات درس</h4>
            </div>
            
            <form id="createLessonForm" class="lesson-form">
                <input type="hidden" asp-for="CourseId" value="@course?.Id" />
                <input type="hidden" asp-for="CreatedBy" value="@User.Identity?.Name" />
                
                <!-- Basic Information -->
                <div class="form-section">
                    <div class="section-header">
                        <h5>اطلاعات پایه</h5>
                    </div>
                    
                    <div class="form-group">
                        <label asp-for="Title" class="form-label">
                            <i class="fas fa-heading"></i>
                            عنوان درس تعاملی
                        </label>
                        <input asp-for="Title" class="form-control modern-input" placeholder="عنوان درس تعاملی را وارد کنید" />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>
                    
                    <div class="form-group">
                        <label asp-for="Description" class="form-label">
                            <i class="fas fa-align-right"></i>
                            توضیحات
                        </label>
                        <textarea asp-for="Description" class="form-control modern-textarea" rows="3" placeholder="توضیحات درس تعاملی را وارد کنید"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                    
                    <div class="form-group">
                        <label asp-for="Order" class="form-label">
                            <i class="fas fa-sort-numeric-up"></i>
                            ترتیب نمایش
                        </label>
                        <input asp-for="Order" type="number" class="form-control modern-input" min="0" value="0" />
                        <span asp-validation-for="Order" class="text-danger"></span>
                    </div>
                </div>

                <!-- SubChapters Selection -->
                <div class="form-section">
                    <div class="section-header">
                        <h5>انتخاب زیرمباحث</h5>
                        <span class="section-badge" id="selectedSubChaptersCount">0</span>
                    </div>
                    
                    <div class="subchapters-grid">
                        @foreach (var subChapter in subChapters!)
                        {
                            <div class="subchapter-card" data-subchapter-id="@subChapter.Id">
                                <div class="subchapter-checkbox">
                                    <input type="checkbox" name="SubChapterIds" value="@subChapter.Id" class="form-check-input modern-checkbox" id="subChapter_@subChapter.Id" />
                                    <label for="subChapter_@subChapter.Id" class="checkbox-label"></label>
                                </div>
                                <div class="subchapter-content">
                                    <h6>@subChapter.Title</h6>
                                    <p>@subChapter.Chapter.Title</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Stages Management -->
                <div class="form-section">
                    <div class="section-header">
                        <h5>مدیریت مراحل</h5>
                        <button type="button" class="btn btn-primary btn-sm" id="addStageBtn">
                            <i class="fas fa-plus"></i>
                            افزودن مرحله
                        </button>
                    </div>
                    
                    <div id="stagesContainer" class="stages-container">
                        <!-- Stages will be added here dynamically -->
                    </div>
                </div>

                <!-- Form Actions -->
                <div class="form-actions">
                    <button type="submit" class="btn btn-primary btn-lg">
                        <i class="fas fa-save"></i>
                        ایجاد درس تعاملی
                    </button>
                    <button type="button" class="btn btn-outline-secondary btn-lg" onclick="window.history.back()">
                        <i class="fas fa-times"></i>
                        انصراف
                    </button>
                </div>
            </form>
        </div>

        <!-- Right Panel - Preview -->
        <div class="creator-panel creator-panel-right">
            <div class="panel-header">
                <div class="panel-icon">
                    <i class="fas fa-eye"></i>
                </div>
                <h4>پیش نمایش</h4>
            </div>
            
            <div class="preview-container">
                <div class="preview-lesson" id="lessonPreview">
                    <div class="preview-header">
                        <h3 id="previewTitle">عنوان درس تعاملی</h3>
                        <p id="previewDescription">توضیحات درس تعاملی</p>
                    </div>
                    
                    <div class="preview-stages" id="previewStages">
                        <div class="preview-placeholder">
                            <i class="fas fa-layer-group"></i>
                            <p>مراحل درس در اینجا نمایش داده می‌شود</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Stage Template -->
<template id="stageTemplate">
    <div class="stage-item" data-stage-index="">
        <div class="stage-header">
            <div class="stage-number"></div>
            <div class="stage-title-input">
                <input type="text" name="Stages[].Title" class="form-control modern-input" placeholder="عنوان مرحله" />
            </div>
            <div class="stage-actions">
                <button type="button" class="btn btn-sm btn-outline-primary preview-stage-btn" title="پیش نمایش">
                    <i class="fas fa-eye"></i>
                </button>
                <button type="button" class="btn btn-sm btn-outline-danger remove-stage" title="حذف">
                    <i class="fas fa-trash"></i>
                </button>
                <button type="button" class="btn btn-sm btn-outline-secondary move-stage-up" title="جابجایی به بالا">
                    <i class="fas fa-arrow-up"></i>
                </button>
                <button type="button" class="btn btn-sm btn-outline-secondary move-stage-down" title="جابجایی به پایین">
                    <i class="fas fa-arrow-down"></i>
                </button>
            </div>
        </div>
        
        <div class="stage-content">
            <div class="form-group">
                <label class="form-label">
                    <i class="fas fa-align-right"></i>
                    توضیحات مرحله
                </label>
                <textarea name="Stages[].Description" class="form-control modern-textarea" rows="2" placeholder="توضیحات مرحله"></textarea>
            </div>
            
            <div class="form-group">
                <label class="form-label">
                    <i class="fas fa-layer-group"></i>
                    نوع مرحله
                </label>
                <select name="Stages[].StageType" class="form-control modern-select stage-type-select">
                    @foreach (var stageType in stageTypes!)
                    {
                        <option value="@stageType">@stageType</option>
                    }
                </select>
            </div>
            
            <div class="form-group">
                <label class="form-label">
                    <i class="fas fa-th"></i>
                    نحوه چیدمان
                </label>
                <select name="Stages[].ArrangementType" class="form-control modern-select">
                    @foreach (var arrangementType in arrangementTypes!)
                    {
                        <option value="@arrangementType">@arrangementType</option>
                    }
                </select>
            </div>
            
            <div class="form-group text-content-group" style="display: none;">
                <label class="form-label">
                    <i class="fas fa-font"></i>
                    محتوای متنی
                </label>
                <textarea name="Stages[].TextContent" class="form-control modern-textarea" rows="4" placeholder="محتوای متنی مرحله"></textarea>
            </div>
            
            <div class="form-group">
                <label class="form-label">
                    <i class="fas fa-sort-numeric-up"></i>
                    ترتیب
                </label>
                <input type="number" name="Stages[].Order" class="form-control modern-input" min="0" value="0" />
            </div>
        </div>
    </div>
</template>

@section Styles {
    <style>
        /* Interactive Lesson Creator Styles */
        .interactive-lesson-creator {
            min-height: 100vh;
            background: #f8f9fa;
            padding: 0;
        }

        .creator-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 4px 20px rgba(102, 126, 234, 0.3);
        }

        .header-content {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .header-icon {
            width: 60px;
            height: 60px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
        }

        .header-text h2 {
            margin: 0;
            font-size: 1.75rem;
            font-weight: 700;
        }

        .header-text p {
            margin: 0.5rem 0 0 0;
            opacity: 0.9;
            font-size: 1rem;
        }

        .creator-layout {
            display: flex;
            min-height: calc(100vh - 120px);
            gap: 0;
        }

        .creator-panel {
            background: white;
            border-radius: 0;
            box-shadow: 0 0 0;
        }

        .creator-panel-left {
            flex: 1;
            border-left: 1px solid #e9ecef;
            overflow-y: auto;
            max-height: calc(100vh - 120px);
        }

        .creator-panel-right {
            width: 400px;
            border-right: 1px solid #e9ecef;
            overflow-y: auto;
            max-height: calc(100vh - 120px);
        }

        .panel-header {
            padding: 1.5rem;
            border-bottom: 1px solid #e9ecef;
            background: #fafbfc;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .panel-icon {
            width: 35px;
            height: 35px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 0.875rem;
        }

        .panel-header h4 {
            margin: 0;
            font-size: 1.125rem;
            font-weight: 600;
            color: #2c3e50;
        }

        .lesson-form {
            padding: 1.5rem;
        }

        .form-section {
            margin-bottom: 2rem;
            background: #fafbfc;
            border-radius: 12px;
            padding: 1.5rem;
            border: 1px solid #e9ecef;
        }

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
            padding-bottom: 0.75rem;
            border-bottom: 2px solid #e9ecef;
        }

        .section-header h5 {
            margin: 0;
            font-size: 1rem;
            font-weight: 600;
            color: #2c3e50;
        }

        .section-badge {
            background: #667eea;
            color: white;
            font-size: 0.75rem;
            padding: 0.25rem 0.5rem;
            border-radius: 12px;
            font-weight: 600;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 0.5rem;
            font-size: 0.875rem;
        }

        .form-label i {
            color: #667eea;
            font-size: 0.875rem;
        }

        /* Modern Input Styles */
        .modern-input {
            border: 2px solid #e9ecef;
            border-radius: 8px;
            padding: 0.75rem 1rem;
            font-size: 0.875rem;
            transition: all 0.2s ease;
            background: white;
        }

        .modern-input:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            outline: none;
        }

        .modern-textarea {
            border: 2px solid #e9ecef;
            border-radius: 8px;
            padding: 0.75rem 1rem;
            font-size: 0.875rem;
            transition: all 0.2s ease;
            background: white;
            resize: vertical;
        }

        .modern-textarea:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            outline: none;
        }

        /* Modern Select Styles */
        .modern-select {
            border: 2px solid #e9ecef;
            border-radius: 8px;
            padding: 0.75rem 1rem;
            font-size: 0.875rem;
            transition: all 0.2s ease;
            background: white;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 0.75rem center;
            background-repeat: no-repeat;
            background-size: 1rem;
            padding-right: 2.5rem;
            appearance: none;
        }

        .modern-select:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            outline: none;
        }

        /* Modern Checkbox Styles */
        .modern-checkbox {
            width: 18px;
            height: 18px;
            border: 2px solid #e9ecef;
            border-radius: 4px;
            appearance: none;
            background: white;
            position: relative;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .modern-checkbox:checked {
            background: #667eea;
            border-color: #667eea;
        }

        .modern-checkbox:checked::after {
            content: '✓';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: white;
            font-size: 12px;
            font-weight: bold;
        }

        /* SubChapters Grid */
        .subchapters-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 1rem;
        }

        .subchapter-card {
            background: white;
            border: 2px solid #e9ecef;
            border-radius: 12px;
            padding: 1rem;
            transition: all 0.2s ease;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .subchapter-card:hover {
            border-color: #667eea;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.15);
        }

        .subchapter-card.selected {
            border-color: #667eea;
            background: rgba(102, 126, 234, 0.05);
        }

        .subchapter-checkbox {
            flex-shrink: 0;
        }

        .subchapter-content h6 {
            margin: 0 0 0.25rem 0;
            font-size: 0.875rem;
            font-weight: 600;
            color: #2c3e50;
        }

        .subchapter-content p {
            margin: 0;
            font-size: 0.75rem;
            color: #6c757d;
        }

        /* Stages Container */
        .stages-container {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .stage-item {
            background: white;
            border: 2px solid #e9ecef;
            border-radius: 12px;
            padding: 1.5rem;
            transition: all 0.2s ease;
        }

        .stage-item:hover {
            border-color: #667eea;
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.1);
        }

        .stage-header {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid #e9ecef;
        }

        .stage-number {
            width: 35px;
            height: 35px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            font-size: 0.875rem;
        }

        .stage-title-input {
            flex: 1;
        }

        .stage-actions {
            display: flex;
            gap: 0.5rem;
        }

        .stage-actions .btn {
            width: 35px;
            height: 35px;
            padding: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 8px;
        }

        /* Preview Styles */
        .preview-container {
            padding: 1.5rem;
        }

        .preview-lesson {
            background: white;
            border-radius: 12px;
            border: 1px solid #e9ecef;
            overflow: hidden;
        }

        .preview-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 1.5rem;
        }

        .preview-header h3 {
            margin: 0 0 0.5rem 0;
            font-size: 1.25rem;
            font-weight: 600;
        }

        .preview-header p {
            margin: 0;
            opacity: 0.9;
            font-size: 0.875rem;
        }

        .preview-stages {
            padding: 1.5rem;
        }

        .preview-placeholder {
            text-align: center;
            color: #6c757d;
            padding: 2rem;
        }

        .preview-placeholder i {
            font-size: 2rem;
            margin-bottom: 1rem;
            opacity: 0.5;
        }

        .preview-stage-item {
            background: #f8f9fa;
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 1rem;
            border: 1px solid #e9ecef;
        }

        .preview-stage-header {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            margin-bottom: 0.75rem;
        }

        .preview-stage-number {
            width: 25px;
            height: 25px;
            background: #667eea;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 0.75rem;
            font-weight: 600;
        }

        .preview-stage-title {
            font-weight: 600;
            color: #2c3e50;
            font-size: 0.875rem;
        }

        .preview-stage-description {
            color: #6c757d;
            font-size: 0.8rem;
            margin-bottom: 0.5rem;
        }

        .preview-stage-meta {
            display: flex;
            gap: 1rem;
            font-size: 0.75rem;
            color: #6c757d;
        }

        /* Form Actions */
        .form-actions {
            display: flex;
            gap: 1rem;
            padding-top: 1.5rem;
            border-top: 1px solid #e9ecef;
            margin-top: 2rem;
        }

        .form-actions .btn {
            flex: 1;
            padding: 0.875rem 1.5rem;
            font-weight: 600;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        /* Responsive Design */
        @@media (max-width: 1200px) {
            .creator-layout {
                flex-direction: column;
            }
            
            .creator-panel-right {
                width: 100%;
                border-right: none;
                border-top: 1px solid #e9ecef;
            }
        }

        @@media (max-width: 768px) {
            .creator-header {
                padding: 1.5rem;
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }
            
            .subchapters-grid {
                grid-template-columns: 1fr;
            }
            
            .stage-header {
                flex-direction: column;
                align-items: stretch;
                gap: 0.75rem;
            }
            
            .stage-actions {
                justify-content: center;
            }
        }

        /* Animation for smooth transitions */
        .stage-item {
            animation: slideInUp 0.3s ease;
        }

        @@keyframes slideInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Loading states */
        .loading {
            opacity: 0.6;
            pointer-events: none;
        }

        .loading::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 20px;
            height: 20px;
            margin: -10px 0 0 -10px;
            border: 2px solid #667eea;
            border-top: 2px solid transparent;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @@keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
}

@section Scripts {
    <script>
        let stageIndex = 0;
        let stages = [];

        $(document).ready(function() {
            initializeCreator();
            setupEventListeners();
            updatePreview();
        });

        function initializeCreator() {
            // Add initial stage
            addStage();
            
            // Update subchapter count
            updateSubChapterCount();
        }

        function setupEventListeners() {
            // SubChapter selection
            $('.subchapter-card').on('click', function() {
                const checkbox = $(this).find('input[type="checkbox"]');
                checkbox.prop('checked', !checkbox.prop('checked'));
                $(this).toggleClass('selected', checkbox.prop('checked'));
                updateSubChapterCount();
            });

            // Add stage button
            $('#addStageBtn').on('click', addStage);

            // Remove stage
            $(document).on('click', '.remove-stage', function() {
                const stageItem = $(this).closest('.stage-item');
                const index = stageItem.data('stage-index');
                
                stageItem.animate({
                    opacity: 0,
                    height: 0,
                    marginBottom: 0
                }, 300, function() {
                    stageItem.remove();
                    reorderStages();
                    updatePreview();
                });
            });

            // Move stage up
            $(document).on('click', '.move-stage-up', function() {
                const stageItem = $(this).closest('.stage-item');
                const prevStage = stageItem.prev('.stage-item');
                
                if (prevStage.length) {
                    stageItem.animate({
                        opacity: 0.5
                    }, 150, function() {
                        stageItem.insertBefore(prevStage);
                        reorderStages();
                        updatePreview();
                        stageItem.animate({ opacity: 1 }, 150);
                    });
                }
            });

            // Move stage down
            $(document).on('click', '.move-stage-down', function() {
                const stageItem = $(this).closest('.stage-item');
                const nextStage = stageItem.next('.stage-item');
                
                if (nextStage.length) {
                    stageItem.animate({
                        opacity: 0.5
                    }, 150, function() {
                        stageItem.insertAfter(nextStage);
                        reorderStages();
                        updatePreview();
                        stageItem.animate({ opacity: 1 }, 150);
                    });
                }
            });

            // Preview stage
            $(document).on('click', '.preview-stage-btn', function() {
                const stageItem = $(this).closest('.stage-item');
                showStagePreview(stageItem);
            });

            // Stage type change
            $(document).on('change', '.stage-type-select', function() {
                const stageItem = $(this).closest('.stage-item');
                const textContentGroup = stageItem.find('.text-content-group');
                
                if ($(this).val() === 'TextOnly') {
                    textContentGroup.slideDown(200);
                } else {
                    textContentGroup.slideUp(200);
                }
                
                updatePreview();
            });

            // Form inputs change
            $(document).on('input change', 'input, textarea, select', function() {
                updatePreview();
            });

            // Form submission
            $('#createLessonForm').on('submit', handleFormSubmission);
        }

        function addStage() {
            const template = document.getElementById('stageTemplate');
            const clone = template.content.cloneNode(true);
            const stageItem = $(clone.querySelector('.stage-item'));
            
            stageItem.attr('data-stage-index', stageIndex);
            
            // Update form field names
            stageItem.find('input, textarea, select').each(function() {
                const name = $(this).attr('name');
                if (name) {
                    $(this).attr('name', name.replace('[]', `[${stageIndex}]`));
                }
            });
            
            // Set stage number
            stageItem.find('.stage-number').text(stageIndex + 1);
            
            // Set default order
            stageItem.find('input[name*="Order"]').val(stageIndex);
            
            $('#stagesContainer').append(stageItem);
            stageIndex++;
            
            updatePreview();
        }

        function reorderStages() {
            $('.stage-item').each(function(index) {
                $(this).attr('data-stage-index', index);
                $(this).find('.stage-number').text(index + 1);
                
                // Update form field names
                $(this).find('input, textarea, select').each(function() {
                    const name = $(this).attr('name');
                    if (name) {
                        $(this).attr('name', name.replace(/\[\d+\]/, `[${index}]`));
                    }
                });
                
                // Update order values
                $(this).find('input[name*="Order"]').val(index);
            });
        }

        function updateSubChapterCount() {
            const count = $('input[name="SubChapterIds"]:checked').length;
            $('#selectedSubChaptersCount').text(count);
        }

        function updatePreview() {
            // Update lesson title and description
            const title = $('input[name="Title"]').val() || 'عنوان درس تعاملی';
            const description = $('textarea[name="Description"]').val() || 'توضیحات درس تعاملی';
            
            $('#previewTitle').text(title);
            $('#previewDescription').text(description);
            
            // Update stages preview
            updateStagesPreview();
        }

        function updateStagesPreview() {
            const previewContainer = $('#previewStages');
            previewContainer.empty();
            
            $('.stage-item').each(function(index) {
                const stageItem = $(this);
                const title = stageItem.find('input[name*="Title"]').val() || `مرحله ${index + 1}`;
                const description = stageItem.find('textarea[name*="Description"]').val() || '';
                const stageType = stageItem.find('select[name*="StageType"]').val() || '';
                const arrangementType = stageItem.find('select[name*="ArrangementType"]').val() || '';
                
                const previewStage = $(`
                    <div class="preview-stage-item">
                        <div class="preview-stage-header">
                            <div class="preview-stage-number">${index + 1}</div>
                            <div class="preview-stage-title">${title}</div>
                        </div>
                        ${description ? `<div class="preview-stage-description">${description}</div>` : ''}
                        <div class="preview-stage-meta">
                            <span>نوع: ${stageType}</span>
                            <span>چیدمان: ${arrangementType}</span>
                        </div>
                    </div>
                `);
                
                previewContainer.append(previewStage);
            });
            
            if ($('.stage-item').length === 0) {
                previewContainer.html(`
                    <div class="preview-placeholder">
                        <i class="fas fa-layer-group"></i>
                        <p>مراحل درس در اینجا نمایش داده می‌شود</p>
                    </div>
                `);
            }
        }

        function showStagePreview(stageItem) {
            const title = stageItem.find('input[name*="Title"]').val() || 'مرحله';
            const description = stageItem.find('textarea[name*="Description"]').val() || '';
            const stageType = stageItem.find('select[name*="StageType"]').val() || '';
            const arrangementType = stageItem.find('select[name*="ArrangementType"]').val() || '';
            const textContent = stageItem.find('textarea[name*="TextContent"]').val() || '';
            
            // Create modal for stage preview
            const modal = $(`
                <div class="modal fade" id="stagePreviewModal" tabindex="-1">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">پیش نمایش مرحله: ${title}</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <div class="modal-body">
                                <div class="preview-stage-detail">
                                    ${description ? `<p><strong>توضیحات:</strong> ${description}</p>` : ''}
                                    <p><strong>نوع مرحله:</strong> ${stageType}</p>
                                    <p><strong>نحوه چیدمان:</strong> ${arrangementType}</p>
                                    ${textContent ? `<div class="text-content-preview"><strong>محتوای متنی:</strong><div class="content-box">${textContent}</div></div>` : ''}
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">بستن</button>
                            </div>
                        </div>
                    </div>
                </div>
            `);
            
            $('body').append(modal);
            modal.modal('show');
            
            modal.on('hidden.bs.modal', function() {
                modal.remove();
            });
        }

        function handleFormSubmission(e) {
            e.preventDefault();
            
            // Show loading state
            const submitBtn = $('#createLessonForm button[type="submit"]');
            const originalText = submitBtn.html();
            submitBtn.html('<i class="fas fa-spinner fa-spin"></i> در حال ایجاد...').prop('disabled', true);
            
            // Collect form data
            const formData = new FormData(document.getElementById('createLessonForm'));
            
            // Convert to JSON
            const data = {
                CourseId: formData.get('CourseId'),
                Title: formData.get('Title'),
                Description: formData.get('Description'),
                Order: parseInt(formData.get('Order')) || 0,
                CreatedBy: formData.get('CreatedBy'),
                SubChapterIds: [],
                Stages: []
            };

            // Collect sub-chapter IDs
            $('input[name="SubChapterIds"]:checked').each(function() {
                data.SubChapterIds.push(parseInt($(this).val()));
            });

            // Collect stages
            $('.stage-item').each(function(index) {
                const stageData = {
                    Title: $(this).find('input[name*="Title"]').val(),
                    Description: $(this).find('textarea[name*="Description"]').val(),
                    StageType: parseInt($(this).find('select[name*="StageType"]').val()),
                    ArrangementType: parseInt($(this).find('select[name*="ArrangementType"]').val()),
                    TextContent: $(this).find('textarea[name*="TextContent"]').val(),
                    Order: parseInt($(this).find('input[name*="Order"]').val())
                };
                data.Stages.push(stageData);
            });

            // Submit via AJAX
            $.ajax({
                url: '@Url.Action("CreateWithStages")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function(response) {
                    if (response.success) {
                        // Show success message
                        showToast('موفقیت', 'درس تعاملی با موفقیت ایجاد شد', 'success');
                        
                        // Redirect to details page
                        setTimeout(() => {
                            window.location.href = '@Url.Action("Details")' + '/' + response.data.id;
                        }, 1500);
                    } else {
                        showToast('خطا', 'خطا در ایجاد درس تعاملی: ' + response.error, 'error');
                        submitBtn.html(originalText).prop('disabled', false);
                    }
                },
                error: function(xhr) {
                    showToast('خطا', 'خطا در ایجاد درس تعاملی', 'error');
                    submitBtn.html(originalText).prop('disabled', false);
                }
            });
        }

        function showToast(title, message, type) {
            const toast = $(`
                <div class="toast" role="alert">
                    <div class="toast-header">
                        <i class="fas fa-${type === 'success' ? 'check-circle text-success' : 'exclamation-circle text-danger'} me-2"></i>
                        <strong class="me-auto">${title}</strong>
                        <button type="button" class="btn-close" data-bs-dismiss="toast"></button>
                    </div>
                    <div class="toast-body">
                        ${message}
                    </div>
                </div>
            `);
            
            $('#toast-container').append(toast);
            toast.toast('show');
            
            toast.on('hidden.bs.toast', function() {
                toast.remove();
            });
        }
    </script>
}