@model EduTrack.WebApp.Models.UserManagementViewModel
@{
    ViewData["Title"] = "مدیریت کاربران";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-0 text-gray-800">مدیریت کاربران</h1>
                    <p class="mb-0 text-muted">مدیریت کامل کاربران سیستم</p>
                </div>
                <div>
                    <a href="@Url.Action("CreateUser", "Admin")" class="btn btn-primary">
                        <i class="fas fa-user-plus"></i> افزودن کاربر جدید
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filter -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-body">
                    <form method="get" class="row">
                        <div class="col-md-4 mb-3">
                            <label for="search" class="form-label">جستجو</label>
                            <input type="text" class="form-control" id="search" name="search" 
                                   value="@Model.Search" placeholder="نام، نام خانوادگی یا ایمیل">
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="role" class="form-label">نقش</label>
                            <select class="form-control" id="role" name="role">
                                <option value="">همه نقش‌ها</option>
                                <option value="Admin" selected="@(Model.SelectedRole == UserRole.Admin)">مدیر</option>
                                <option value="Teacher" selected="@(Model.SelectedRole == UserRole.Teacher)">معلم</option>
                                <option value="Student" selected="@(Model.SelectedRole == UserRole.Student)">دانش‌آموز</option>
                            </select>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="pageSize" class="form-label">تعداد در صفحه</label>
                            <select class="form-control" id="pageSize" name="pageSize">
                                <option value="10" selected="@(Model.PageSize == 10)">10</option>
                                <option value="20" selected="@(Model.PageSize == 20)">20</option>
                                <option value="50" selected="@(Model.PageSize == 50)">50</option>
                                <option value="100" selected="@(Model.PageSize == 100)">100</option>
                            </select>
                        </div>
                        <div class="col-md-2 mb-3">
                            <label class="form-label">&nbsp;</label>
                            <div>
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-search"></i> جستجو
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Users Table -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">
                        لیست کاربران (@Model.TotalUsers کاربر)
                    </h6>
                </div>
                <div class="card-body">
                    @if (Model.Users.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-bordered" id="usersTable">
                                <thead>
                                    <tr>
                                        <th>نام کامل</th>
                                        <th>ایمیل</th>
                                        <th>نقش</th>
                                        <th>تاریخ ثبت‌نام</th>
                                        <th>آخرین ورود</th>
                                        <th>وضعیت</th>
                                        <th>عملیات</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var user in Model.Users)
                                    {
                                        <tr id="user-@user.Id">
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="mr-3">
                                                        <div class="icon-circle bg-@(user.Role == UserRole.Admin ? "danger" : user.Role == UserRole.Teacher ? "warning" : "info")">
                                                            <i class="fas fa-@(user.Role == UserRole.Admin ? "user-shield" : user.Role == UserRole.Teacher ? "chalkboard-teacher" : "user-graduate") text-white"></i>
                                                        </div>
                                                    </div>
                                                    <div>
                                                        <div class="font-weight-bold">@user.FullName</div>
                                                        <div class="text-muted small">@user.UserName</div>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>@user.Email</td>
                                            <td>
                                                <span class="badge badge-@(user.Role == UserRole.Admin ? "danger" : user.Role == UserRole.Teacher ? "warning" : "info")">
                                                    @(user.Role == UserRole.Admin ? "مدیر" : user.Role == UserRole.Teacher ? "معلم" : "دانش‌آموز")
                                                </span>
                                            </td>
                                            <td>@user.CreatedAt.ToString("yyyy/MM/dd")</td>
                                            <td>
                                                @if (user.LastLoginAt.HasValue)
                                                {
                                                    @user.LastLoginAt.Value.ToString("yyyy/MM/dd HH:mm")
                                                }
                                                else
                                                {
                                                    <span class="text-muted">هرگز</span>
                                                }
                                            </td>
                                            <td>
                                                <span class="badge badge-@(user.IsActive ? "success" : "secondary")" id="status-@user.Id">
                                                    @(user.IsActive ? "فعال" : "غیرفعال")
                                                </span>
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a href="@Url.Action("EditUser", "Admin", new { id = user.Id })" 
                                                       class="btn btn-sm btn-outline-primary" title="ویرایش">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <button type="button" class="btn btn-sm btn-outline-warning" 
                                                            onclick="showResetPasswordModal('@user.Id', '@user.FullName')" title="تغییر رمز عبور">
                                                        <i class="fas fa-key"></i>
                                                    </button>
                                                    <button type="button" class="btn btn-sm btn-outline-@(user.IsActive ? "secondary" : "success")" 
                                                            onclick="toggleUserStatus('@user.Id', '@user.FullName', @user.IsActive.ToString().ToLower())" 
                                                            title="@(user.IsActive ? "غیرفعال کردن" : "فعال کردن")" id="toggle-@user.Id">
                                                        <i class="fas fa-@(user.IsActive ? "user-slash" : "user-check")"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Pagination -->
                        @if (Model.TotalPages > 1)
                        {
                            <nav aria-label="Page navigation">
                                <ul class="pagination justify-content-center">
                                    @if (Model.CurrentPage > 1)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Users", "Admin", new { search = Model.Search, role = Model.SelectedRole, page = Model.CurrentPage - 1, pageSize = Model.PageSize })">قبلی</a>
                                        </li>
                                    }

                                    @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                                    {
                                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                            <a class="page-link" href="@Url.Action("Users", "Admin", new { search = Model.Search, role = Model.SelectedRole, page = i, pageSize = Model.PageSize })">@i</a>
                                        </li>
                                    }

                                    @if (Model.CurrentPage < Model.TotalPages)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Users", "Admin", new { search = Model.Search, role = Model.SelectedRole, page = Model.CurrentPage + 1, pageSize = Model.PageSize })">بعدی</a>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        }
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-users fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">کاربری یافت نشد</h5>
                            <p class="text-muted">با فیلترهای مختلف جستجو کنید یا کاربر جدیدی اضافه کنید.</p>
                            <a href="@Url.Action("CreateUser", "Admin")" class="btn btn-primary">
                                <i class="fas fa-user-plus"></i> افزودن کاربر جدید
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Reset Password Modal -->
<div class="modal fade" id="resetPasswordModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">تغییر رمز عبور</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <form id="resetPasswordForm">
                <div class="modal-body">
                    <p>رمز عبور کاربر <strong id="resetUserName"></strong> را تغییر دهید:</p>
                    <input type="hidden" id="resetUserId" name="userId">
                    <div class="form-group">
                        <label for="newPassword">رمز عبور جدید</label>
                        <input type="password" class="form-control" id="newPassword" name="newPassword" required minlength="6">
                        <small class="form-text text-muted">رمز عبور باید حداقل ۶ کاراکتر باشد</small>
                    </div>
                    <div class="form-group">
                        <label for="confirmPassword">تکرار رمز عبور</label>
                        <input type="password" class="form-control" id="confirmPassword" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">انصراف</button>
                    <button type="submit" class="btn btn-warning">تغییر رمز عبور</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showResetPasswordModal(userId, userName) {
            $('#resetUserId').val(userId);
            $('#resetUserName').text(userName);
            $('#newPassword').val('');
            $('#confirmPassword').val('');
            $('#resetPasswordModal').modal('show');
        }

        function toggleUserStatus(userId, userName, isActive) {
            var action = isActive ? 'غیرفعال' : 'فعال';
            if (confirm(`آیا مطمئن هستید که می‌خواهید کاربر "${userName}" را ${action} کنید؟`)) {
                $.post('@Url.Action("ToggleUserStatus", "Admin")', {
                    userId: userId,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                })
                .done(function(response) {
                    if (response.success) {
                        // Update status badge
                        var statusBadge = $('#status-' + userId);
                        var toggleButton = $('#toggle-' + userId);
                        
                        if (response.isActive) {
                            statusBadge.removeClass('badge-secondary').addClass('badge-success').text('فعال');
                            toggleButton.removeClass('btn-outline-success').addClass('btn-outline-secondary')
                                       .attr('title', 'غیرفعال کردن')
                                       .html('<i class="fas fa-user-slash"></i>');
                        } else {
                            statusBadge.removeClass('badge-success').addClass('badge-secondary').text('غیرفعال');
                            toggleButton.removeClass('btn-outline-secondary').addClass('btn-outline-success')
                                       .attr('title', 'فعال کردن')
                                       .html('<i class="fas fa-user-check"></i>');
                        }
                        
                        // Update onclick attribute
                        toggleButton.attr('onclick', `toggleUserStatus('${userId}', '${userName}', ${response.isActive})`);
                        
                        showAlert('success', response.message);
                    } else {
                        showAlert('error', response.message);
                    }
                })
                .fail(function() {
                    showAlert('error', 'خطا در تغییر وضعیت کاربر');
                });
            }
        }

        $('#resetPasswordForm').on('submit', function(e) {
            e.preventDefault();
            
            var newPassword = $('#newPassword').val();
            var confirmPassword = $('#confirmPassword').val();
            
            if (newPassword !== confirmPassword) {
                showAlert('error', 'رمز عبور و تکرار آن مطابقت ندارند');
                return;
            }
            
            if (newPassword.length < 6) {
                showAlert('error', 'رمز عبور باید حداقل ۶ کاراکتر باشد');
                return;
            }
            
            $.post('@Url.Action("ResetPassword", "Admin")', {
                userId: $('#resetUserId').val(),
                newPassword: newPassword,
                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
            })
            .done(function(response) {
                if (response.success) {
                    $('#resetPasswordModal').modal('hide');
                    showAlert('success', response.message);
                } else {
                    showAlert('error', response.message);
                }
            })
            .fail(function() {
                showAlert('error', 'خطا در تغییر رمز عبور');
            });
        });

        function showAlert(type, message) {
            var alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
            var alertHtml = `
                <div class="alert ${alertClass} alert-dismissible fade show" role="alert">
                    ${message}
                    <button type="button" class="close" data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                </div>
            `;
            
            // Remove existing alerts
            $('.alert').remove();
            
            // Add new alert at the top of the container
            $('.container-fluid').prepend(alertHtml);
            
            // Auto-dismiss after 5 seconds
            setTimeout(function() {
                $('.alert').fadeOut();
            }, 5000);
        }

        // Show success message if exists
        @if (TempData["Success"] != null)
        {
            <text>
            $(document).ready(function() {
                showAlert('success', '@TempData["Success"]');
            });
            </text>
        }

        // Add CSRF token to all AJAX requests
        $.ajaxSetup({
            beforeSend: function(xhr, settings) {
                if (!/^(GET|HEAD|OPTIONS|TRACE)$/i.test(settings.type) && !this.crossDomain) {
                    xhr.setRequestHeader("RequestVerificationToken", $('input[name="__RequestVerificationToken"]').val());
                }
            }
        });
    </script>
}

<style>
    .icon-circle {
        height: 2.5rem;
        width: 2.5rem;
        border-radius: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .text-gray-800 {
        color: #5a5c69 !important;
    }
</style>
